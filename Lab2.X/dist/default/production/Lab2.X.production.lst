

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 06 20:14:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataBANK0
   290  021F                     __pidataBANK0:	
   291                           
   292                           ;initializer for _display2
   293  021F  343F               	retlw	63
   294  0220  3400               	retlw	0
   295  0221  3406               	retlw	6
   296  0222  3400               	retlw	0
   297  0223  345B               	retlw	91
   298  0224  3400               	retlw	0
   299  0225  344F               	retlw	79
   300  0226  3400               	retlw	0
   301  0227  3466               	retlw	102
   302  0228  3400               	retlw	0
   303  0229  346D               	retlw	109
   304  022A  3400               	retlw	0
   305  022B  347D               	retlw	125
   306  022C  3400               	retlw	0
   307  022D  3407               	retlw	7
   308  022E  3400               	retlw	0
   309  022F  347F               	retlw	127
   310  0230  3400               	retlw	0
   311  0231  346F               	retlw	111
   312  0232  3400               	retlw	0
   313  0233  3477               	retlw	119
   314  0234  3400               	retlw	0
   315  0235  347C               	retlw	124
   316  0236  3400               	retlw	0
   317  0237  3439               	retlw	57
   318  0238  3400               	retlw	0
   319  0239  345E               	retlw	94
   320  023A  3400               	retlw	0
   321  023B  3479               	retlw	121
   322  023C  3400               	retlw	0
   323  023D  3471               	retlw	113
   324  023E  3400               	retlw	0
   325  001F                     _ADCON0bits	set	31
   326  0008                     _PORTDbits	set	8
   327  000B                     _INTCON	set	11
   328  0008                     _PORTD	set	8
   329  0007                     _PORTC	set	7
   330  0005                     _PORTA	set	5
   331  0006                     _PORTB	set	6
   332  0001                     _TMR0	set	1
   333  001E                     _ADRESH	set	30
   334  000C                     _PIR1bits	set	12
   335  0006                     _PORTBbits	set	6
   336  000B                     _INTCONbits	set	11
   337  009F                     _ADCON1bits	set	159
   338  008C                     _PIE1bits	set	140
   339  0096                     _IOCBbits	set	150
   340  0081                     _OPTION_REGbits	set	129
   341  0081                     _OPTION_REG	set	129
   342  0087                     _TRISC	set	135
   343  0088                     _TRISD	set	136
   344  0086                     _TRISBbits	set	134
   345  0085                     _TRISA	set	133
   346  0189                     _ANSELHbits	set	393
   347  0189                     _ANSELH	set	393
   348  0188                     _ANSEL	set	392
   349                           
   350                           ; #config settings
   351  0000                     
   352                           	psect	cinit
   353  0013                     start_initialization:	
   354  0013                     __initialization:	
   355                           
   356                           ; Initialize objects allocated to BANK0
   357  0013  1383               	bcf	3,7	;select IRP bank0
   358  0014  3040               	movlw	low (__pdataBANK0+32)
   359  0015  00FD               	movwf	btemp+-1
   360  0016  3002               	movlw	high __pidataBANK0
   361  0017  00FE               	movwf	btemp
   362  0018  301F               	movlw	low __pidataBANK0
   363  0019  00FF               	movwf	btemp+1
   364  001A  3020               	movlw	low __pdataBANK0
   365  001B  0084               	movwf	4
   366  001C  120A  118A  2243  120A  118A  	fcall	init_ram0
   367                           
   368                           ; Clear objects allocated to BANK0
   369  0021  01D2               	clrf	__pbssBANK0& (0+127)
   370  0022  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   371  0023  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   372  0024  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   373  0025  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   374  0026  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   375  0027  01D8               	clrf	(__pbssBANK0+6)& (0+127)
   376  0028  01D9               	clrf	(__pbssBANK0+7)& (0+127)
   377  0029  01DA               	clrf	(__pbssBANK0+8)& (0+127)
   378  002A  01DB               	clrf	(__pbssBANK0+9)& (0+127)
   379  002B  01DC               	clrf	(__pbssBANK0+10)& (0+127)
   380                           
   381                           ; Clear objects allocated to COMMON
   382  002C  01F9               	clrf	__pbssCOMMON& (0+127)
   383  002D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   384  002E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   385  002F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   386  0030                     end_of_initialization:	
   387                           ;End of C runtime variable initialization code
   388                           
   389  0030                     __end_of__initialization:	
   390  0030  0183               	clrf	3
   391  0031  120A  118A  2834   	ljmp	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMMON
   394  0079                     __pbssCOMMON:	
   395  0079                     _valorold:	
   396  0079                     	ds	2
   397  007B                     _contador:	
   398  007B                     	ds	2
   399                           
   400                           	psect	bssBANK0
   401  0052                     __pbssBANK0:	
   402  0052                     _d2:	
   403  0052                     	ds	2
   404  0054                     _d1:	
   405  0054                     	ds	2
   406  0056                     _var:	
   407  0056                     	ds	2
   408  0058                     _valorold2:	
   409  0058                     	ds	2
   410  005A                     _change:	
   411  005A                     	ds	1
   412  005B                     _alarma:	
   413  005B                     	ds	1
   414  005C                     _i:	
   415  005C                     	ds	1
   416                           
   417                           	psect	dataBANK0
   418  0020                     __pdataBANK0:	
   419  0020                     _display2:	
   420  0020                     	ds	32
   421                           
   422                           	psect	inittext
   423  023F                     init_fetch0:	
   424                           ;	Called with low address in FSR and high address in W
   425                           
   426  023F  087E               	movf	btemp,w
   427  0240  008A               	movwf	10
   428  0241  087F               	movf	btemp+1,w
   429  0242  0082               	movwf	2
   430  0243                     init_ram0:	
   431                           ;Called with:
   432                           ;	high address of idata address in btemp 
   433                           ;	low address of idata address in btemp+1 
   434                           ;	low address of data in FSR
   435                           ;	high address + 1 of data in btemp-1
   436                           
   437  0243  120A  118A  223F  120A  118A  	fcall	init_fetch0
   438  0248  0080               	movwf	0
   439  0249  0A84               	incf	4,f
   440  024A  0804               	movf	4,w
   441  024B  067D               	xorwf	btemp+-1,w
   442  024C  1903               	btfsc	3,2
   443  024D  3400               	retlw	0
   444  024E  0AFF               	incf	btemp+1,f
   445  024F  1903               	btfsc	3,2
   446  0250  0AFE               	incf	btemp,f
   447  0251  2A43               	goto	init_ram0
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:	
   451  0070                     ?_ADC_conf:	
   452  0070                     ?_ISR:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?i1___awdiv:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     i1___awdiv@divisor:	
   462                           ; 2 bytes @ 0x0
   463                           
   464                           
   465                           ; 2 bytes @ 0x0
   466  0070                     	ds	2
   467  0072                     i1___awdiv@dividend:	
   468                           
   469                           ; 2 bytes @ 0x2
   470  0072                     	ds	2
   471  0074                     ??i1___awdiv:	
   472                           
   473                           ; 1 bytes @ 0x4
   474  0074                     	ds	1
   475  0075                     i1___awdiv@counter:	
   476                           
   477                           ; 1 bytes @ 0x5
   478  0075                     	ds	1
   479  0076                     i1___awdiv@sign:	
   480                           
   481                           ; 1 bytes @ 0x6
   482  0076                     	ds	1
   483  0077                     i1___awdiv@quotient:	
   484                           
   485                           ; 2 bytes @ 0x7
   486  0077                     	ds	2
   487                           
   488                           	psect	cstackBANK0
   489  0040                     __pcstackBANK0:	
   490  0040                     ??_ISR:	
   491                           
   492                           ; 1 bytes @ 0x0
   493  0040                     	ds	6
   494  0046                     ??_ADC_conf:	
   495  0046                     ?___awdiv:	
   496                           ; 1 bytes @ 0x6
   497                           
   498  0046                     ___awdiv@divisor:	
   499                           ; 2 bytes @ 0x6
   500                           
   501                           
   502                           ; 2 bytes @ 0x6
   503  0046                     	ds	2
   504  0048                     ADC_conf@ADCNum:	
   505  0048                     ___awdiv@dividend:	
   506                           ; 1 bytes @ 0x8
   507                           
   508                           
   509                           ; 2 bytes @ 0x8
   510  0048                     	ds	2
   511  004A                     ??___awdiv:	
   512                           
   513                           ; 1 bytes @ 0xA
   514  004A                     	ds	1
   515  004B                     ___awdiv@counter:	
   516                           
   517                           ; 1 bytes @ 0xB
   518  004B                     	ds	1
   519  004C                     ___awdiv@sign:	
   520                           
   521                           ; 1 bytes @ 0xC
   522  004C                     	ds	1
   523  004D                     ___awdiv@quotient:	
   524                           
   525                           ; 2 bytes @ 0xD
   526  004D                     	ds	2
   527  004F                     ??_main:	
   528                           
   529                           ; 1 bytes @ 0xF
   530  004F                     	ds	3
   531                           
   532                           	psect	maintext
   533  0034                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 79 in file "Lab2.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       3       0       0       0
   556 ;;      Totals:         0       3       0       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels required when called:    3
   559 ;; This function calls:
   560 ;;		_ADC_conf
   561 ;;		___awdiv
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _main
   569  0034                     _main:	
   570  0034                     l1132:	
   571                           ;incstack = 0
   572                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   573                           
   574                           
   575                           ;Lab2.c: 81: ANSEL=0;
   576  0034  1683               	bsf	3,5	;RP0=1, select bank3
   577  0035  1703               	bsf	3,6	;RP1=1, select bank3
   578  0036  0188               	clrf	8	;volatile
   579                           
   580                           ;Lab2.c: 82: ANSELH=0;
   581  0037  0189               	clrf	9	;volatile
   582  0038                     l1134:	
   583                           
   584                           ;Lab2.c: 83: ANSELHbits.ANS8 =1;
   585  0038  1409               	bsf	9,0	;volatile
   586                           
   587                           ;Lab2.c: 85: TRISA=0;
   588  0039  1683               	bsf	3,5	;RP0=1, select bank1
   589  003A  1303               	bcf	3,6	;RP1=0, select bank1
   590  003B  0185               	clrf	5	;volatile
   591  003C                     l1136:	
   592                           
   593                           ;Lab2.c: 86: TRISBbits.TRISB2=1;
   594  003C  1506               	bsf	6,2	;volatile
   595  003D                     l1138:	
   596                           
   597                           ;Lab2.c: 87: TRISBbits.TRISB7=1;
   598  003D  1786               	bsf	6,7	;volatile
   599  003E                     l1140:	
   600                           
   601                           ;Lab2.c: 88: TRISBbits.TRISB6=1;
   602  003E  1706               	bsf	6,6	;volatile
   603                           
   604                           ;Lab2.c: 89: TRISD=0;
   605  003F  0188               	clrf	8	;volatile
   606                           
   607                           ;Lab2.c: 90: TRISC=0;
   608  0040  0187               	clrf	7	;volatile
   609                           
   610                           ;Lab2.c: 92: PORTB=0;
   611  0041  1283               	bcf	3,5	;RP0=0, select bank0
   612  0042  1303               	bcf	3,6	;RP1=0, select bank0
   613  0043  0186               	clrf	6	;volatile
   614                           
   615                           ;Lab2.c: 93: PORTA=0;
   616  0044  0185               	clrf	5	;volatile
   617                           
   618                           ;Lab2.c: 94: PORTC=0;
   619  0045  0187               	clrf	7	;volatile
   620                           
   621                           ;Lab2.c: 95: PORTD=0;
   622  0046  0188               	clrf	8	;volatile
   623  0047                     l1142:	
   624                           
   625                           ;Lab2.c: 97: ADC_conf(0);
   626  0047  3000               	movlw	0
   627  0048  120A  118A  21F7  120A  118A  	fcall	_ADC_conf
   628  004D                     l1144:	
   629                           
   630                           ;Lab2.c: 120: INTCON=0;
   631  004D  018B               	clrf	11	;volatile
   632  004E                     l1146:	
   633                           
   634                           ;Lab2.c: 121: INTCONbits.GIE=1;
   635  004E  178B               	bsf	11,7	;volatile
   636  004F                     l1148:	
   637                           
   638                           ;Lab2.c: 122: INTCONbits.RBIE=1;
   639  004F  158B               	bsf	11,3	;volatile
   640  0050                     l1150:	
   641                           
   642                           ;Lab2.c: 123: INTCONbits.RBIF=0;
   643  0050  100B               	bcf	11,0	;volatile
   644  0051                     l1152:	
   645                           
   646                           ;Lab2.c: 125: INTCONbits.T0IE=1;
   647  0051  168B               	bsf	11,5	;volatile
   648  0052                     l1154:	
   649                           
   650                           ;Lab2.c: 126: INTCONbits.T0IF=0;
   651  0052  110B               	bcf	11,2	;volatile
   652  0053                     l1156:	
   653                           
   654                           ;Lab2.c: 128: OPTION_REG=0;
   655  0053  1683               	bsf	3,5	;RP0=1, select bank1
   656  0054  1303               	bcf	3,6	;RP1=0, select bank1
   657  0055  0181               	clrf	1	;volatile
   658  0056                     l1158:	
   659                           
   660                           ;Lab2.c: 129: OPTION_REGbits.PS0=0;
   661  0056  1001               	bcf	1,0	;volatile
   662  0057                     l1160:	
   663                           
   664                           ;Lab2.c: 130: OPTION_REGbits.PS1=0;
   665  0057  1081               	bcf	1,1	;volatile
   666  0058                     l1162:	
   667                           
   668                           ;Lab2.c: 131: OPTION_REGbits.PS2=1;
   669  0058  1501               	bsf	1,2	;volatile
   670  0059                     l1164:	
   671                           
   672                           ;Lab2.c: 133: TMR0=200;
   673  0059  30C8               	movlw	200
   674  005A  1283               	bcf	3,5	;RP0=0, select bank0
   675  005B  1303               	bcf	3,6	;RP1=0, select bank0
   676  005C  0081               	movwf	1	;volatile
   677  005D                     l1166:	
   678                           
   679                           ;Lab2.c: 135: IOCBbits.IOCB7=1;
   680  005D  1683               	bsf	3,5	;RP0=1, select bank1
   681  005E  1303               	bcf	3,6	;RP1=0, select bank1
   682  005F  1796               	bsf	22,7	;volatile
   683  0060                     l1168:	
   684                           
   685                           ;Lab2.c: 136: IOCBbits.IOCB6=1;
   686  0060  1716               	bsf	22,6	;volatile
   687  0061                     l1170:	
   688                           
   689                           ;Lab2.c: 137: i=0;
   690  0061  1283               	bcf	3,5	;RP0=0, select bank0
   691  0062  1303               	bcf	3,6	;RP1=0, select bank0
   692  0063  01DC               	clrf	_i
   693  0064                     l1172:	
   694                           
   695                           ;Lab2.c: 140:     if (alarma > i){
   696  0064  085B               	movf	_alarma,w
   697  0065  025C               	subwf	_i,w
   698  0066  1803               	skipnc
   699  0067  2869               	goto	u561
   700  0068  286A               	goto	u560
   701  0069                     u561:	
   702  0069  286C               	goto	l83
   703  006A                     u560:	
   704  006A                     l1174:	
   705                           
   706                           ;Lab2.c: 141:         PORTDbits.RD2=1;
   707  006A  1508               	bsf	8,2	;volatile
   708                           
   709                           ;Lab2.c: 142:     }
   710  006B  286D               	goto	l1176
   711  006C                     l83:	
   712                           ;Lab2.c: 143:     else{
   713                           
   714                           
   715                           ;Lab2.c: 144:         PORTDbits.RD2=0;
   716  006C  1108               	bcf	8,2	;volatile
   717  006D                     l1176:	
   718                           
   719                           ;Lab2.c: 146:     _delay((unsigned long)((10)*(4000000/4000.0)));
   720  006D  300D               	movlw	13
   721  006E  1283               	bcf	3,5	;RP0=0, select bank0
   722  006F  1303               	bcf	3,6	;RP1=0, select bank0
   723  0070  00D0               	movwf	??_main+1
   724  0071  30FB               	movlw	251
   725  0072  00CF               	movwf	??_main
   726  0073                     u597:	
   727  0073  0BCF               	decfsz	??_main,f
   728  0074  2873               	goto	u597
   729  0075  0BD0               	decfsz	??_main+1,f
   730  0076  2873               	goto	u597
   731  0077                     l1178:	
   732                           
   733                           ;Lab2.c: 147:     ADCON0bits.GO_DONE=1;
   734  0077  1283               	bcf	3,5	;RP0=0, select bank0
   735  0078  1303               	bcf	3,6	;RP1=0, select bank0
   736  0079  149F               	bsf	31,1	;volatile
   737                           
   738                           ;Lab2.c: 148:     _delay((unsigned long)((10)*(4000000/4000.0)));
   739  007A  300D               	movlw	13
   740  007B  1283               	bcf	3,5	;RP0=0, select bank0
   741  007C  1303               	bcf	3,6	;RP1=0, select bank0
   742  007D  00D0               	movwf	??_main+1
   743  007E  30FB               	movlw	251
   744  007F  00CF               	movwf	??_main
   745  0080                     u607:	
   746  0080  0BCF               	decfsz	??_main,f
   747  0081  2880               	goto	u607
   748  0082  0BD0               	decfsz	??_main+1,f
   749  0083  2880               	goto	u607
   750  0084                     l1180:	
   751                           
   752                           ;Lab2.c: 149:     if (change == 1){
   753  0084  1283               	bcf	3,5	;RP0=0, select bank0
   754  0085  1303               	bcf	3,6	;RP1=0, select bank0
   755  0086  035A               	decf	_change,w
   756  0087  1D03               	btfss	3,2
   757  0088  288A               	goto	u571
   758  0089  288B               	goto	u570
   759  008A                     u571:	
   760  008A  28BA               	goto	l1196
   761  008B                     u570:	
   762  008B                     l1182:	
   763                           
   764                           ;Lab2.c: 150:         if(PORTDbits.RD1==1){
   765  008B  1C88               	btfss	8,1	;volatile
   766  008C  288E               	goto	u581
   767  008D  288F               	goto	u580
   768  008E                     u581:	
   769  008E  28AD               	goto	l86
   770  008F                     u580:	
   771  008F                     l1184:	
   772                           
   773                           ;Lab2.c: 151:             PORTDbits.RD0=0;
   774  008F  1008               	bcf	8,0	;volatile
   775                           
   776                           ;Lab2.c: 152:             PORTDbits.RD1=0;
   777  0090  1088               	bcf	8,1	;volatile
   778  0091                     l1186:	
   779                           
   780                           ;Lab2.c: 153:             PORTC=display2[ADRESH/16];
   781  0091  3010               	movlw	16
   782  0092  00C6               	movwf	___awdiv@divisor
   783  0093  3000               	movlw	0
   784  0094  00C7               	movwf	___awdiv@divisor+1
   785  0095  081E               	movf	30,w	;volatile
   786  0096  00CF               	movwf	??_main
   787  0097  01D0               	clrf	??_main+1
   788  0098  084F               	movf	??_main,w
   789  0099  00C8               	movwf	___awdiv@dividend
   790  009A  0850               	movf	??_main+1,w
   791  009B  00C9               	movwf	___awdiv@dividend+1
   792  009C  120A  118A  20C0  120A  118A  	fcall	___awdiv
   793  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   794  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   795  00A3  0846               	movf	?___awdiv,w
   796  00A4  00D1               	movwf	??_main+2
   797  00A5  0751               	addwf	??_main+2,w
   798  00A6  3E20               	addlw	(low (_display2| 0))& (0+255)
   799  00A7  0084               	movwf	4
   800  00A8  1383               	bcf	3,7	;select IRP bank0
   801  00A9  0800               	movf	0,w
   802  00AA  0087               	movwf	7	;volatile
   803  00AB                     l1188:	
   804                           
   805                           ;Lab2.c: 154:             PORTDbits.RD0=1;
   806  00AB  1408               	bsf	8,0	;volatile
   807                           
   808                           ;Lab2.c: 155:             }
   809  00AC  28B9               	goto	l1194
   810  00AD                     l86:	
   811                           ;Lab2.c: 156:         else{
   812                           
   813                           
   814                           ;Lab2.c: 157:             PORTDbits.RD0=0;
   815  00AD  1008               	bcf	8,0	;volatile
   816                           
   817                           ;Lab2.c: 158:             PORTDbits.RD1=0;
   818  00AE  1088               	bcf	8,1	;volatile
   819  00AF                     l1190:	
   820                           
   821                           ;Lab2.c: 159:             PORTC=display2[ADRESH%16];
   822  00AF  081E               	movf	30,w	;volatile
   823  00B0  390F               	andlw	15
   824  00B1  00CF               	movwf	??_main
   825  00B2  074F               	addwf	??_main,w
   826  00B3  3E20               	addlw	(low (_display2| 0))& (0+255)
   827  00B4  0084               	movwf	4
   828  00B5  1383               	bcf	3,7	;select IRP bank0
   829  00B6  0800               	movf	0,w
   830  00B7  0087               	movwf	7	;volatile
   831  00B8                     l1192:	
   832                           
   833                           ;Lab2.c: 160:             PORTDbits.RD1=1;
   834  00B8  1488               	bsf	8,1	;volatile
   835  00B9                     l1194:	
   836                           
   837                           ;Lab2.c: 162:         change=0;
   838  00B9  01DA               	clrf	_change
   839  00BA                     l1196:	
   840                           
   841                           ;Lab2.c: 164:     PORTA=i;
   842  00BA  085C               	movf	_i,w
   843  00BB  0085               	movwf	5	;volatile
   844  00BC  2864               	goto	l1172
   845  00BD  120A  118A  2810   	ljmp	start
   846  00C0                     __end_of_main:	
   847                           
   848                           	psect	text1
   849  00C0                     __ptext1:	
   850 ;; *************** function ___awdiv *****************
   851 ;; Defined at:
   852 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  divisor         2    6[BANK0 ] int 
   855 ;;  dividend        2    8[BANK0 ] int 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  quotient        2   13[BANK0 ] int 
   858 ;;  sign            1   12[BANK0 ] unsigned char 
   859 ;;  counter         1   11[BANK0 ] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2    6[BANK0 ] int 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       4       0       0       0
   870 ;;      Locals:         0       4       0       0       0
   871 ;;      Temps:          0       1       0       0       0
   872 ;;      Totals:         0       9       0       0       0
   873 ;;Total ram usage:        9 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function ___awdiv
   885  00C0                     ___awdiv:	
   886  00C0                     l994:	
   887                           ;incstack = 0
   888                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   889                           
   890  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   891  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   892  00C2  01CC               	clrf	___awdiv@sign
   893  00C3                     l996:	
   894  00C3  1FC7               	btfss	___awdiv@divisor+1,7
   895  00C4  28C6               	goto	u301
   896  00C5  28C7               	goto	u300
   897  00C6                     u301:	
   898  00C6  28CE               	goto	l1002
   899  00C7                     u300:	
   900  00C7                     l998:	
   901  00C7  09C6               	comf	___awdiv@divisor,f
   902  00C8  09C7               	comf	___awdiv@divisor+1,f
   903  00C9  0AC6               	incf	___awdiv@divisor,f
   904  00CA  1903               	skipnz
   905  00CB  0AC7               	incf	___awdiv@divisor+1,f
   906  00CC                     l1000:	
   907  00CC  01CC               	clrf	___awdiv@sign
   908  00CD  0ACC               	incf	___awdiv@sign,f
   909  00CE                     l1002:	
   910  00CE  1FC9               	btfss	___awdiv@dividend+1,7
   911  00CF  28D1               	goto	u311
   912  00D0  28D2               	goto	u310
   913  00D1                     u311:	
   914  00D1  28DB               	goto	l1008
   915  00D2                     u310:	
   916  00D2                     l1004:	
   917  00D2  09C8               	comf	___awdiv@dividend,f
   918  00D3  09C9               	comf	___awdiv@dividend+1,f
   919  00D4  0AC8               	incf	___awdiv@dividend,f
   920  00D5  1903               	skipnz
   921  00D6  0AC9               	incf	___awdiv@dividend+1,f
   922  00D7                     l1006:	
   923  00D7  3001               	movlw	1
   924  00D8  00CA               	movwf	??___awdiv
   925  00D9  084A               	movf	??___awdiv,w
   926  00DA  06CC               	xorwf	___awdiv@sign,f
   927  00DB                     l1008:	
   928  00DB  01CD               	clrf	___awdiv@quotient
   929  00DC  01CE               	clrf	___awdiv@quotient+1
   930  00DD                     l1010:	
   931  00DD  0846               	movf	___awdiv@divisor,w
   932  00DE  0447               	iorwf	___awdiv@divisor+1,w
   933  00DF  1903               	btfsc	3,2
   934  00E0  28E2               	goto	u321
   935  00E1  28E3               	goto	u320
   936  00E2                     u321:	
   937  00E2  291A               	goto	l1030
   938  00E3                     u320:	
   939  00E3                     l1012:	
   940  00E3  01CB               	clrf	___awdiv@counter
   941  00E4  0ACB               	incf	___awdiv@counter,f
   942  00E5  28F1               	goto	l1018
   943  00E6                     l1014:	
   944  00E6  3001               	movlw	1
   945  00E7                     u335:	
   946  00E7  1003               	clrc
   947  00E8  0DC6               	rlf	___awdiv@divisor,f
   948  00E9  0DC7               	rlf	___awdiv@divisor+1,f
   949  00EA  3EFF               	addlw	-1
   950  00EB  1D03               	skipz
   951  00EC  28E7               	goto	u335
   952  00ED                     l1016:	
   953  00ED  3001               	movlw	1
   954  00EE  00CA               	movwf	??___awdiv
   955  00EF  084A               	movf	??___awdiv,w
   956  00F0  07CB               	addwf	___awdiv@counter,f
   957  00F1                     l1018:	
   958  00F1  1FC7               	btfss	___awdiv@divisor+1,7
   959  00F2  28F4               	goto	u341
   960  00F3  28F5               	goto	u340
   961  00F4                     u341:	
   962  00F4  28E6               	goto	l1014
   963  00F5                     u340:	
   964  00F5                     l1020:	
   965  00F5  3001               	movlw	1
   966  00F6                     u355:	
   967  00F6  1003               	clrc
   968  00F7  0DCD               	rlf	___awdiv@quotient,f
   969  00F8  0DCE               	rlf	___awdiv@quotient+1,f
   970  00F9  3EFF               	addlw	-1
   971  00FA  1D03               	skipz
   972  00FB  28F6               	goto	u355
   973  00FC  0847               	movf	___awdiv@divisor+1,w
   974  00FD  0249               	subwf	___awdiv@dividend+1,w
   975  00FE  1D03               	skipz
   976  00FF  2902               	goto	u365
   977  0100  0846               	movf	___awdiv@divisor,w
   978  0101  0248               	subwf	___awdiv@dividend,w
   979  0102                     u365:	
   980  0102  1C03               	skipc
   981  0103  2905               	goto	u361
   982  0104  2906               	goto	u360
   983  0105                     u361:	
   984  0105  290D               	goto	l1026
   985  0106                     u360:	
   986  0106                     l1022:	
   987  0106  0846               	movf	___awdiv@divisor,w
   988  0107  02C8               	subwf	___awdiv@dividend,f
   989  0108  0847               	movf	___awdiv@divisor+1,w
   990  0109  1C03               	skipc
   991  010A  03C9               	decf	___awdiv@dividend+1,f
   992  010B  02C9               	subwf	___awdiv@dividend+1,f
   993  010C                     l1024:	
   994  010C  144D               	bsf	___awdiv@quotient,0
   995  010D                     l1026:	
   996  010D  3001               	movlw	1
   997  010E                     u375:	
   998  010E  1003               	clrc
   999  010F  0CC7               	rrf	___awdiv@divisor+1,f
  1000  0110  0CC6               	rrf	___awdiv@divisor,f
  1001  0111  3EFF               	addlw	-1
  1002  0112  1D03               	skipz
  1003  0113  290E               	goto	u375
  1004  0114                     l1028:	
  1005  0114  3001               	movlw	1
  1006  0115  02CB               	subwf	___awdiv@counter,f
  1007  0116  1D03               	btfss	3,2
  1008  0117  2919               	goto	u381
  1009  0118  291A               	goto	u380
  1010  0119                     u381:	
  1011  0119  28F5               	goto	l1020
  1012  011A                     u380:	
  1013  011A                     l1030:	
  1014  011A  084C               	movf	___awdiv@sign,w
  1015  011B  1903               	btfsc	3,2
  1016  011C  291E               	goto	u391
  1017  011D  291F               	goto	u390
  1018  011E                     u391:	
  1019  011E  2924               	goto	l1034
  1020  011F                     u390:	
  1021  011F                     l1032:	
  1022  011F  09CD               	comf	___awdiv@quotient,f
  1023  0120  09CE               	comf	___awdiv@quotient+1,f
  1024  0121  0ACD               	incf	___awdiv@quotient,f
  1025  0122  1903               	skipnz
  1026  0123  0ACE               	incf	___awdiv@quotient+1,f
  1027  0124                     l1034:	
  1028  0124  084E               	movf	___awdiv@quotient+1,w
  1029  0125  00C7               	movwf	?___awdiv+1
  1030  0126  084D               	movf	___awdiv@quotient,w
  1031  0127  00C6               	movwf	?___awdiv
  1032  0128                     l343:	
  1033  0128  0008               	return
  1034  0129                     __end_of___awdiv:	
  1035                           
  1036                           	psect	text2
  1037  01F7                     __ptext2:	
  1038 ;; *************** function _ADC_conf *****************
  1039 ;; Defined at:
  1040 ;;		line 14 in file "ADC.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  ADCNum          1    wreg     unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  ADCNum          1    8[BANK0 ] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       0       0       0       0
  1055 ;;      Locals:         0       1       0       0       0
  1056 ;;      Temps:          0       2       0       0       0
  1057 ;;      Totals:         0       3       0       0       0
  1058 ;;Total ram usage:        3 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    2
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _ADC_conf
  1070  01F7                     _ADC_conf:	
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _ADC_conf: [wreg-fsr0h+status,2+status,0]
  1074                           ;ADC_conf@ADCNum stored from wreg
  1075  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1076  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1077  01F9  00C8               	movwf	ADC_conf@ADCNum
  1078  01FA                     l962:	
  1079                           
  1080                           ;ADC.c: 15:     switch(ADCNum){
  1081  01FA  2A11               	goto	l986
  1082  01FB                     l102:	
  1083                           ;ADC.c: 16:         case 0:
  1084                           
  1085                           
  1086                           ;ADC.c: 18:         PIE1bits.ADIE=1;
  1087  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1088  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1089  01FD  170C               	bsf	12,6	;volatile
  1090                           
  1091                           ;ADC.c: 19:         PIR1bits.ADIF=1;
  1092  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1093  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0200  170C               	bsf	12,6	;volatile
  1095  0201                     l964:	
  1096                           
  1097                           ;ADC.c: 21:         ADCON0bits.ADCS=01;
  1098  0201  081F               	movf	31,w	;volatile
  1099  0202  393F               	andlw	-193
  1100  0203  3840               	iorlw	64
  1101  0204  009F               	movwf	31	;volatile
  1102  0205                     l966:	
  1103                           
  1104                           ;ADC.c: 23:         ADCON0bits.CHS0=0;
  1105  0205  111F               	bcf	31,2	;volatile
  1106  0206                     l968:	
  1107                           
  1108                           ;ADC.c: 24:         ADCON0bits.CHS1=0;
  1109  0206  119F               	bcf	31,3	;volatile
  1110  0207                     l970:	
  1111                           
  1112                           ;ADC.c: 25:         ADCON0bits.CHS2=0;
  1113  0207  121F               	bcf	31,4	;volatile
  1114  0208                     l972:	
  1115                           
  1116                           ;ADC.c: 26:         ADCON0bits.CHS3=1;
  1117  0208  169F               	bsf	31,5	;volatile
  1118  0209                     l974:	
  1119                           
  1120                           ;ADC.c: 27:         ADCON0bits.GO_nDONE=0;
  1121  0209  109F               	bcf	31,1	;volatile
  1122  020A                     l976:	
  1123                           
  1124                           ;ADC.c: 29:         ADCON0bits.ADON=1;
  1125  020A  141F               	bsf	31,0	;volatile
  1126  020B                     l978:	
  1127                           
  1128                           ;ADC.c: 31:         ADCON1bits.ADFM=0;
  1129  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1130  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1131  020D  139F               	bcf	31,7	;volatile
  1132  020E                     l980:	
  1133                           
  1134                           ;ADC.c: 33:         ADCON1bits.VCFG0=0;
  1135  020E  121F               	bcf	31,4	;volatile
  1136  020F                     l982:	
  1137                           
  1138                           ;ADC.c: 34:         ADCON1bits.VCFG1=0;
  1139  020F  129F               	bcf	31,5	;volatile
  1140                           
  1141                           ;ADC.c: 35:         break;
  1142  0210  2A1E               	goto	l104
  1143  0211                     l986:	
  1144  0211  0848               	movf	ADC_conf@ADCNum,w
  1145  0212  00C6               	movwf	??_ADC_conf
  1146  0213  01C7               	clrf	??_ADC_conf+1
  1147                           
  1148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1149                           ; Switch size 1, requested type "simple"
  1150                           ; Number of cases is 1, Range of values is 0 to 0
  1151                           ; switch strategies available:
  1152                           ; Name         Instructions Cycles
  1153                           ; simple_byte            4     3 (average)
  1154                           ; direct_byte           11     8 (fixed)
  1155                           ; jumptable            260     6 (fixed)
  1156                           ;	Chosen strategy is simple_byte
  1157  0214  0847               	movf	??_ADC_conf+1,w
  1158  0215  3A00               	xorlw	0	; case 0
  1159  0216  1903               	skipnz
  1160  0217  2A19               	goto	l1228
  1161  0218  2A1E               	goto	l104
  1162  0219                     l1228:	
  1163                           
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 1, Range of values is 0 to 0
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            4     3 (average)
  1169                           ; direct_byte           11     8 (fixed)
  1170                           ; jumptable            260     6 (fixed)
  1171                           ;	Chosen strategy is simple_byte
  1172  0219  0846               	movf	??_ADC_conf,w
  1173  021A  3A00               	xorlw	0	; case 0
  1174  021B  1903               	skipnz
  1175  021C  29FB               	goto	l102
  1176  021D  2A1E               	goto	l104
  1177  021E                     l104:	
  1178  021E  0008               	return
  1179  021F                     __end_of_ADC_conf:	
  1180                           
  1181                           	psect	text3
  1182  0129                     __ptext3:	
  1183 ;; *************** function _ISR *****************
  1184 ;; Defined at:
  1185 ;;		line 35 in file "Lab2.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0
  1201 ;;      Temps:          0       6       0       0       0
  1202 ;;      Totals:         0       6       0       0       0
  1203 ;;Total ram usage:        6 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    1
  1206 ;; This function calls:
  1207 ;;		i1___awdiv
  1208 ;; This function is called by:
  1209 ;;		Interrupt level 1
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _ISR
  1215  0129                     _ISR:	
  1216  0129                     i1l1082:	
  1217                           
  1218                           ;Lab2.c: 38:     INTCONbits.T0IE=0;
  1219  0129  128B               	bcf	11,5	;volatile
  1220                           
  1221                           ;Lab2.c: 40:     if(PORTBbits.RB7==1 && INTCONbits.RBIF==1){
  1222  012A  1F86               	btfss	6,7	;volatile
  1223  012B  292D               	goto	u50_21
  1224  012C  292E               	goto	u50_20
  1225  012D                     u50_21:	
  1226  012D  293B               	goto	i1l1096
  1227  012E                     u50_20:	
  1228  012E                     i1l1084:	
  1229  012E  1C0B               	btfss	11,0	;volatile
  1230  012F  2931               	goto	u51_21
  1231  0130  2932               	goto	u51_20
  1232  0131                     u51_21:	
  1233  0131  293B               	goto	i1l1096
  1234  0132                     u51_20:	
  1235  0132                     i1l1086:	
  1236                           
  1237                           ;Lab2.c: 41:         INTCONbits.GIE=0;
  1238  0132  138B               	bcf	11,7	;volatile
  1239                           
  1240                           ;Lab2.c: 42:         INTCONbits.RBIE=0;
  1241  0133  118B               	bcf	11,3	;volatile
  1242  0134                     i1l1088:	
  1243                           
  1244                           ;Lab2.c: 43:         i++;
  1245  0134  3001               	movlw	1
  1246  0135  00C0               	movwf	??_ISR
  1247  0136  0840               	movf	??_ISR,w
  1248  0137  07DC               	addwf	_i,f
  1249  0138                     i1l1090:	
  1250                           
  1251                           ;Lab2.c: 44:         INTCONbits.GIE=1;
  1252  0138  178B               	bsf	11,7	;volatile
  1253  0139                     i1l1092:	
  1254                           
  1255                           ;Lab2.c: 45:         INTCONbits.RBIE=1;
  1256  0139  158B               	bsf	11,3	;volatile
  1257  013A                     i1l1094:	
  1258                           
  1259                           ;Lab2.c: 46:         INTCONbits.RBIF=0;
  1260  013A  100B               	bcf	11,0	;volatile
  1261  013B                     i1l1096:	
  1262                           
  1263                           ;Lab2.c: 48:     if(PORTBbits.RB6==1 && INTCONbits.RBIF==1){
  1264  013B  1F06               	btfss	6,6	;volatile
  1265  013C  293E               	goto	u52_21
  1266  013D  293F               	goto	u52_20
  1267  013E                     u52_21:	
  1268  013E  294A               	goto	i1l1110
  1269  013F                     u52_20:	
  1270  013F                     i1l1098:	
  1271  013F  1C0B               	btfss	11,0	;volatile
  1272  0140  2942               	goto	u53_21
  1273  0141  2943               	goto	u53_20
  1274  0142                     u53_21:	
  1275  0142  294A               	goto	i1l1110
  1276  0143                     u53_20:	
  1277  0143                     i1l1100:	
  1278                           
  1279                           ;Lab2.c: 49:         INTCONbits.GIE=0;
  1280  0143  138B               	bcf	11,7	;volatile
  1281                           
  1282                           ;Lab2.c: 50:         INTCONbits.RBIE=0;
  1283  0144  118B               	bcf	11,3	;volatile
  1284  0145                     i1l1102:	
  1285                           
  1286                           ;Lab2.c: 51:         i--;
  1287  0145  3001               	movlw	1
  1288  0146  02DC               	subwf	_i,f
  1289  0147                     i1l1104:	
  1290                           
  1291                           ;Lab2.c: 52:         INTCONbits.GIE=1;
  1292  0147  178B               	bsf	11,7	;volatile
  1293  0148                     i1l1106:	
  1294                           
  1295                           ;Lab2.c: 53:         INTCONbits.RBIE=1;
  1296  0148  158B               	bsf	11,3	;volatile
  1297  0149                     i1l1108:	
  1298                           
  1299                           ;Lab2.c: 54:         INTCONbits.RBIF=0;
  1300  0149  100B               	bcf	11,0	;volatile
  1301  014A                     i1l1110:	
  1302                           
  1303                           ;Lab2.c: 57:     if (PIR1bits.ADIF==1){
  1304  014A  1F0C               	btfss	12,6	;volatile
  1305  014B  294D               	goto	u54_21
  1306  014C  294E               	goto	u54_20
  1307  014D                     u54_21:	
  1308  014D  297C               	goto	i1l1120
  1309  014E                     u54_20:	
  1310  014E                     i1l1112:	
  1311                           
  1312                           ;Lab2.c: 58:         INTCONbits.GIE=0;
  1313  014E  138B               	bcf	11,7	;volatile
  1314                           
  1315                           ;Lab2.c: 59:         INTCONbits.RBIE=0;
  1316  014F  118B               	bcf	11,3	;volatile
  1317  0150                     i1l1114:	
  1318                           
  1319                           ;Lab2.c: 61:         d1 = display2[ADRESH/16];
  1320  0150  3010               	movlw	16
  1321  0151  00F0               	movwf	i1___awdiv@divisor
  1322  0152  3000               	movlw	0
  1323  0153  00F1               	movwf	i1___awdiv@divisor+1
  1324  0154  081E               	movf	30,w	;volatile
  1325  0155  00C0               	movwf	??_ISR
  1326  0156  01C1               	clrf	??_ISR+1
  1327  0157  0840               	movf	??_ISR,w
  1328  0158  00F2               	movwf	i1___awdiv@dividend
  1329  0159  0841               	movf	??_ISR+1,w
  1330  015A  00F3               	movwf	i1___awdiv@dividend+1
  1331  015B  120A  118A  2190  120A  118A  	fcall	i1___awdiv
  1332  0160  0870               	movf	?i1___awdiv,w
  1333  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0163  00C2               	movwf	??_ISR+2
  1336  0164  0742               	addwf	??_ISR+2,w
  1337  0165  3E20               	addlw	(low (_display2| 0))& (0+255)
  1338  0166  0084               	movwf	4
  1339  0167  1383               	bcf	3,7	;select IRP bank0
  1340  0168  0800               	movf	0,w
  1341  0169  00D4               	movwf	_d1
  1342  016A  0A84               	incf	4,f
  1343  016B  0800               	movf	0,w
  1344  016C  00D5               	movwf	_d1+1
  1345  016D                     i1l1116:	
  1346                           
  1347                           ;Lab2.c: 62:         d2 =display2[ADRESH%16];
  1348  016D  081E               	movf	30,w	;volatile
  1349  016E  390F               	andlw	15
  1350  016F  00C0               	movwf	??_ISR
  1351  0170  0740               	addwf	??_ISR,w
  1352  0171  3E20               	addlw	(low (_display2| 0))& (0+255)
  1353  0172  0084               	movwf	4
  1354  0173  0800               	movf	0,w
  1355  0174  00D2               	movwf	_d2
  1356  0175  0A84               	incf	4,f
  1357  0176  0800               	movf	0,w
  1358  0177  00D3               	movwf	_d2+1
  1359  0178                     i1l1118:	
  1360                           
  1361                           ;Lab2.c: 63:         alarma=ADRESH;
  1362  0178  081E               	movf	30,w	;volatile
  1363  0179  00C0               	movwf	??_ISR
  1364  017A  0840               	movf	??_ISR,w
  1365  017B  00DB               	movwf	_alarma
  1366  017C                     i1l1120:	
  1367                           
  1368                           ;Lab2.c: 67:     if(INTCONbits.T0IF == 1){
  1369  017C  1D0B               	btfss	11,2	;volatile
  1370  017D  297F               	goto	u55_21
  1371  017E  2980               	goto	u55_20
  1372  017F                     u55_21:	
  1373  017F  2984               	goto	i1l1126
  1374  0180                     u55_20:	
  1375  0180                     i1l1122:	
  1376                           
  1377                           ;Lab2.c: 68:         TMR0 = 200;
  1378  0180  30C8               	movlw	200
  1379  0181  0081               	movwf	1	;volatile
  1380  0182                     i1l1124:	
  1381                           
  1382                           ;Lab2.c: 69:         change = 1;
  1383  0182  01DA               	clrf	_change
  1384  0183  0ADA               	incf	_change,f
  1385  0184                     i1l1126:	
  1386                           
  1387                           ;Lab2.c: 73:     INTCONbits.T0IE=1;
  1388  0184  168B               	bsf	11,5	;volatile
  1389  0185                     i1l1128:	
  1390                           
  1391                           ;Lab2.c: 74:     INTCONbits.T0IF=0;
  1392  0185  110B               	bcf	11,2	;volatile
  1393  0186                     i1l1130:	
  1394                           
  1395                           ;Lab2.c: 75:     PIR1bits.ADIF=0;
  1396  0186  130C               	bcf	12,6	;volatile
  1397  0187                     i1l77:	
  1398  0187  0845               	movf	??_ISR+5,w
  1399  0188  008A               	movwf	10
  1400  0189  0844               	movf	??_ISR+4,w
  1401  018A  0084               	movwf	4
  1402  018B  0E43               	swapf	(??_ISR+3)^0,w
  1403  018C  0083               	movwf	3
  1404  018D  0EFE               	swapf	btemp,f
  1405  018E  0E7E               	swapf	btemp,w
  1406  018F  0009               	retfie
  1407  0190                     __end_of_ISR:	
  1408                           
  1409                           	psect	intentry
  1410  0004                     __pintentry:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1413                           
  1414  0004                     interrupt_function:	
  1415  007E                     saved_w	set	btemp
  1416  0004  00FE               	movwf	btemp
  1417  0005  0E03               	swapf	3,w
  1418  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0008  00C3               	movwf	??_ISR+3
  1421  0009  0804               	movf	4,w
  1422  000A  00C4               	movwf	??_ISR+4
  1423  000B  080A               	movf	10,w
  1424  000C  00C5               	movwf	??_ISR+5
  1425  000D  120A  118A  2929   	ljmp	_ISR
  1426                           
  1427                           	psect	text4
  1428  0190                     __ptext4:	
  1429 ;; *************** function i1___awdiv *****************
  1430 ;; Defined at:
  1431 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  divisor         2    0[COMMON] int 
  1434 ;;  dividend        2    2[COMMON] int 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  __awdiv         2    7[COMMON] int 
  1437 ;;  __awdiv         1    6[COMMON] unsigned char 
  1438 ;;  __awdiv         1    5[COMMON] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2    0[COMMON] int 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         4       0       0       0       0
  1449 ;;      Locals:         4       0       0       0       0
  1450 ;;      Temps:          1       0       0       0       0
  1451 ;;      Totals:         9       0       0       0       0
  1452 ;;Total ram usage:        9 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_ISR
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function i1___awdiv
  1463  0190                     i1___awdiv:	
  1464  0190                     i1l1038:	
  1465                           ;incstack = 0
  1466                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  1467                           
  1468  0190  01F6               	clrf	i1___awdiv@sign
  1469  0191                     i1l1040:	
  1470  0191  1FF1               	btfss	i1___awdiv@divisor+1,7
  1471  0192  2994               	goto	u40_21
  1472  0193  2995               	goto	u40_20
  1473  0194                     u40_21:	
  1474  0194  299C               	goto	i1l1046
  1475  0195                     u40_20:	
  1476  0195                     i1l1042:	
  1477  0195  09F0               	comf	i1___awdiv@divisor,f
  1478  0196  09F1               	comf	i1___awdiv@divisor+1,f
  1479  0197  0AF0               	incf	i1___awdiv@divisor,f
  1480  0198  1903               	skipnz
  1481  0199  0AF1               	incf	i1___awdiv@divisor+1,f
  1482  019A                     i1l1044:	
  1483  019A  01F6               	clrf	i1___awdiv@sign
  1484  019B  0AF6               	incf	i1___awdiv@sign,f
  1485  019C                     i1l1046:	
  1486  019C  1FF3               	btfss	i1___awdiv@dividend+1,7
  1487  019D  299F               	goto	u41_21
  1488  019E  29A0               	goto	u41_20
  1489  019F                     u41_21:	
  1490  019F  29A9               	goto	i1l1052
  1491  01A0                     u41_20:	
  1492  01A0                     i1l1048:	
  1493  01A0  09F2               	comf	i1___awdiv@dividend,f
  1494  01A1  09F3               	comf	i1___awdiv@dividend+1,f
  1495  01A2  0AF2               	incf	i1___awdiv@dividend,f
  1496  01A3  1903               	skipnz
  1497  01A4  0AF3               	incf	i1___awdiv@dividend+1,f
  1498  01A5                     i1l1050:	
  1499  01A5  3001               	movlw	1
  1500  01A6  00F4               	movwf	??i1___awdiv
  1501  01A7  0874               	movf	??i1___awdiv,w
  1502  01A8  06F6               	xorwf	i1___awdiv@sign,f
  1503  01A9                     i1l1052:	
  1504  01A9  01F7               	clrf	i1___awdiv@quotient
  1505  01AA  01F8               	clrf	i1___awdiv@quotient+1
  1506  01AB                     i1l1054:	
  1507  01AB  0870               	movf	i1___awdiv@divisor,w
  1508  01AC  0471               	iorwf	i1___awdiv@divisor+1,w
  1509  01AD  1903               	btfsc	3,2
  1510  01AE  29B0               	goto	u42_21
  1511  01AF  29B1               	goto	u42_20
  1512  01B0                     u42_21:	
  1513  01B0  29E8               	goto	i1l1074
  1514  01B1                     u42_20:	
  1515  01B1                     i1l1056:	
  1516  01B1  01F5               	clrf	i1___awdiv@counter
  1517  01B2  0AF5               	incf	i1___awdiv@counter,f
  1518  01B3  29BF               	goto	i1l1062
  1519  01B4                     i1l1058:	
  1520  01B4  3001               	movlw	1
  1521  01B5                     u43_25:	
  1522  01B5  1003               	clrc
  1523  01B6  0DF0               	rlf	i1___awdiv@divisor,f
  1524  01B7  0DF1               	rlf	i1___awdiv@divisor+1,f
  1525  01B8  3EFF               	addlw	-1
  1526  01B9  1D03               	skipz
  1527  01BA  29B5               	goto	u43_25
  1528  01BB                     i1l1060:	
  1529  01BB  3001               	movlw	1
  1530  01BC  00F4               	movwf	??i1___awdiv
  1531  01BD  0874               	movf	??i1___awdiv,w
  1532  01BE  07F5               	addwf	i1___awdiv@counter,f
  1533  01BF                     i1l1062:	
  1534  01BF  1FF1               	btfss	i1___awdiv@divisor+1,7
  1535  01C0  29C2               	goto	u44_21
  1536  01C1  29C3               	goto	u44_20
  1537  01C2                     u44_21:	
  1538  01C2  29B4               	goto	i1l1058
  1539  01C3                     u44_20:	
  1540  01C3                     i1l1064:	
  1541  01C3  3001               	movlw	1
  1542  01C4                     u45_25:	
  1543  01C4  1003               	clrc
  1544  01C5  0DF7               	rlf	i1___awdiv@quotient,f
  1545  01C6  0DF8               	rlf	i1___awdiv@quotient+1,f
  1546  01C7  3EFF               	addlw	-1
  1547  01C8  1D03               	skipz
  1548  01C9  29C4               	goto	u45_25
  1549  01CA  0871               	movf	i1___awdiv@divisor+1,w
  1550  01CB  0273               	subwf	i1___awdiv@dividend+1,w
  1551  01CC  1D03               	skipz
  1552  01CD  29D0               	goto	u46_25
  1553  01CE  0870               	movf	i1___awdiv@divisor,w
  1554  01CF  0272               	subwf	i1___awdiv@dividend,w
  1555  01D0                     u46_25:	
  1556  01D0  1C03               	skipc
  1557  01D1  29D3               	goto	u46_21
  1558  01D2  29D4               	goto	u46_20
  1559  01D3                     u46_21:	
  1560  01D3  29DB               	goto	i1l1070
  1561  01D4                     u46_20:	
  1562  01D4                     i1l1066:	
  1563  01D4  0870               	movf	i1___awdiv@divisor,w
  1564  01D5  02F2               	subwf	i1___awdiv@dividend,f
  1565  01D6  0871               	movf	i1___awdiv@divisor+1,w
  1566  01D7  1C03               	skipc
  1567  01D8  03F3               	decf	i1___awdiv@dividend+1,f
  1568  01D9  02F3               	subwf	i1___awdiv@dividend+1,f
  1569  01DA                     i1l1068:	
  1570  01DA  1477               	bsf	i1___awdiv@quotient,0
  1571  01DB                     i1l1070:	
  1572  01DB  3001               	movlw	1
  1573  01DC                     u47_25:	
  1574  01DC  1003               	clrc
  1575  01DD  0CF1               	rrf	i1___awdiv@divisor+1,f
  1576  01DE  0CF0               	rrf	i1___awdiv@divisor,f
  1577  01DF  3EFF               	addlw	-1
  1578  01E0  1D03               	skipz
  1579  01E1  29DC               	goto	u47_25
  1580  01E2                     i1l1072:	
  1581  01E2  3001               	movlw	1
  1582  01E3  02F5               	subwf	i1___awdiv@counter,f
  1583  01E4  1D03               	btfss	3,2
  1584  01E5  29E7               	goto	u48_21
  1585  01E6  29E8               	goto	u48_20
  1586  01E7                     u48_21:	
  1587  01E7  29C3               	goto	i1l1064
  1588  01E8                     u48_20:	
  1589  01E8                     i1l1074:	
  1590  01E8  0876               	movf	i1___awdiv@sign,w
  1591  01E9  1903               	btfsc	3,2
  1592  01EA  29EC               	goto	u49_21
  1593  01EB  29ED               	goto	u49_20
  1594  01EC                     u49_21:	
  1595  01EC  29F2               	goto	i1l1078
  1596  01ED                     u49_20:	
  1597  01ED                     i1l1076:	
  1598  01ED  09F7               	comf	i1___awdiv@quotient,f
  1599  01EE  09F8               	comf	i1___awdiv@quotient+1,f
  1600  01EF  0AF7               	incf	i1___awdiv@quotient,f
  1601  01F0  1903               	skipnz
  1602  01F1  0AF8               	incf	i1___awdiv@quotient+1,f
  1603  01F2                     i1l1078:	
  1604  01F2  0878               	movf	i1___awdiv@quotient+1,w
  1605  01F3  00F1               	movwf	?i1___awdiv+1
  1606  01F4  0877               	movf	i1___awdiv@quotient,w
  1607  01F5  00F0               	movwf	?i1___awdiv
  1608  01F6                     i1l343:	
  1609  01F6  0008               	return
  1610  01F7                     __end_ofi1___awdiv:	
  1611  007E                     btemp	set	126	;btemp
  1612  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     18      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awdiv

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     574
                                             15 BANK0      3     3      0
                           _ADC_conf
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     552
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _ADC_conf                                             3     3      0      22
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0     352
                                              0 BANK0      6     6      0
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (3) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_conf
   ___awdiv

 _ISR (ROOT)
   i1___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 06 20:14:33 2020

          ADC_conf@ADCNum 0048                         _i 005C                         pc 0002  
             __CFG_CP$OFF 0000                        l83 006C                        l86 00AD  
                      _d1 0054                        _d2 0052              ___awdiv@sign 004C  
                      fsr 0004                       l102 01FB                       l104 021E  
                     l343 0128                       l970 0207                       l962 01FA  
                     l980 020E                       l972 0208                       l964 0201  
                     l982 020F                       l974 0209                       l966 0205  
                     l976 020A                       l968 0206                       l978 020B  
                     l986 0211                       l994 00C0                       l996 00C3  
                     l998 00C7                       u300 00C7                       u301 00C6  
                     u310 00D2                       u311 00D1                       u320 00E3  
                     u321 00E2                       u340 00F5                       u341 00F4  
                     u335 00E7                       u360 0106                       u361 0105  
            __CFG_CPD$OFF 0000                       u355 00F6                       u380 011A  
                     _ISR 0129                       u381 0119                       u365 0102  
                     u390 011F                       u391 011E                       u375 010E  
                     u607 0080                       u560 006A                       u561 0069  
                     u570 008B                       u571 008A                       u580 008F  
                     u581 008E                       u597 0073                       _var 0056  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1000 00CC                      l1010 00DD  
                    l1002 00CE                      l1020 00F5                      l1012 00E3  
                    l1004 00D2                      l1022 0106                      l1014 00E6  
                    l1030 011A                      l1006 00D7                      l1032 011F  
                    l1024 010C                      l1016 00ED                      l1008 00DB  
                    l1034 0124                      l1026 010D                      l1018 00F1  
                    l1028 0114                      l1140 003E                      l1132 0034  
                    l1150 0050                      l1142 0047                      l1134 0038  
                    l1160 0057                      l1152 0051                      l1144 004D  
                    l1136 003C                      l1170 0061                      l1162 0058  
                    l1154 0052                      l1146 004E                      l1138 003D  
                    l1228 0219                      l1180 0084                      l1172 0064  
                    l1164 0059                      l1156 0053                      l1148 004F  
                    l1190 00AF                      l1182 008B                      l1174 006A  
                    l1166 005D                      l1158 0056                      l1192 00B8  
                    l1184 008F                      l1176 006D                      l1168 0060  
                    l1194 00B9                      l1186 0091                      l1178 0077  
                    l1188 00AB                      l1196 00BA                      i1l77 0187  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 0034  
                    btemp 007E                      start 0010          __end_of_ADC_conf 021F  
           __CFG_IESO$OFF 0000                     ??_ISR 0040                     ?_main 0070  
          i1___awdiv@sign 0076           __end_of___awdiv 0129             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           ___awdiv@divisor 0046                     i1l343 01F6  
         ___awdiv@counter 004B                     u40_20 0195                     u40_21 0194  
                   u41_20 01A0                     u41_21 019F                     u42_20 01B1  
                   u50_20 012E                     u42_21 01B0                     u50_21 012D  
                   u51_20 0132                     u51_21 0131                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   u43_25 01B5                     u44_20 01C3                     u52_20 013F  
                   u44_21 01C2                     u52_21 013E                     u53_20 0143  
                   u53_21 0142                     u45_25 01C4                     u46_20 01D4  
                   u54_20 014E                     u46_21 01D3                     u54_21 014D  
                   u46_25 01D0                     u55_20 0180                     u55_21 017F  
                   u47_25 01DC                     u48_20 01E8                     u48_21 01E7  
                   u49_20 01ED                     u49_21 01EC                     _TRISA 0085  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E        __size_ofi1___awdiv 0067            __CFG_MCLRE$OFF 0000  
         __initialization 0013              __end_of_main 00C0                    ??_main 004F  
                  _ADRESH 001E          ___awdiv@dividend 0048                    _ANSELH 0189  
                  i1l1100 0143                    i1l1102 0145                    i1l1110 014A  
                  i1l1040 0191                    i1l1112 014E                    i1l1120 017C  
                  i1l1104 0147                    i1l1050 01A5                    i1l1042 0195  
                  i1l1130 0186                    i1l1122 0180                    i1l1114 0150  
                  i1l1106 0148                    i1l1060 01BB                    i1l1052 01A9  
                  i1l1044 019A                    i1l1124 0182                    i1l1116 016D  
                  i1l1108 0149                    i1l1070 01DB                    i1l1062 01BF  
                  i1l1054 01AB                    i1l1046 019C                    i1l1038 0190  
                  i1l1126 0184                    i1l1118 0178                    i1l1072 01E2  
                  i1l1064 01C3                    i1l1056 01B1                    i1l1048 01A0  
                  i1l1128 0185                    i1l1066 01D4                    i1l1058 01B4  
                  i1l1074 01E8                    i1l1090 0138                    i1l1082 0129  
                  i1l1076 01ED                    i1l1068 01DA                    i1l1092 0139  
                  i1l1084 012E                    i1l1078 01F2                    i1l1094 013A  
                  i1l1086 0132                    i1l1088 0134                    i1l1096 013B  
                  i1l1098 013F                    _INTCON 000B            __CFG_PWRTE$OFF 0000  
               ??___awdiv 004A                    _change 005A                    _alarma 005B  
        ___awdiv@quotient 004D         __end_ofi1___awdiv 01F7                    saved_w 007E  
               ?_ADC_conf 0070   __end_of__initialization 0030            __pcstackCOMMON 0070  
            __pidataBANK0 021F            _OPTION_REGbits 0081                ??_ADC_conf 0046  
              __pbssBANK0 0052                __pmaintext 0034                __pintentry 0004  
      i1___awdiv@dividend 0072        i1___awdiv@quotient 0077                   ___awdiv 00C0  
                 __ptext1 00C0                   __ptext2 01F7                   __ptext3 0129  
                 __ptext4 0190              __size_of_ISR 0067      end_of_initialization 0030  
               _PORTBbits 0006                 _PORTDbits 0008                 _TRISBbits 0086  
               i1___awdiv 0190         __size_of_ADC_conf 0028       start_initialization 0013  
             __end_of_ISR 0190                ?i1___awdiv 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 023F               __pdataBANK0 0020               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0040                  ?___awdiv 0046  
       i1___awdiv@divisor 0070         i1___awdiv@counter 0075                  _ADC_conf 01F7  
             ??i1___awdiv 0074         interrupt_function 0004                  _IOCBbits 0096  
                _PIE1bits 008C                  _PIR1bits 000C                 _valorold2 0058  
              _ADCON0bits 001F                _ADCON1bits 009F          __size_of___awdiv 0069  
              _ANSELHbits 0189         __CFG_BOR4V$BOR40V 0000                  _display2 0020  
                _contador 007B             __size_of_main 008C                  _valorold 0079  
              _INTCONbits 000B                  init_ram0 0243                  intlevel1 0000  
              _OPTION_REG 0081  
