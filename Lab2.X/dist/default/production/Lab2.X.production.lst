

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 06 18:00:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataBANK0
   211  0204                     __pidataBANK0:	
   212                           
   213                           ;initializer for _display2
   214  0204  343F               	retlw	63
   215  0205  3400               	retlw	0
   216  0206  3406               	retlw	6
   217  0207  3400               	retlw	0
   218  0208  345B               	retlw	91
   219  0209  3400               	retlw	0
   220  020A  344F               	retlw	79
   221  020B  3400               	retlw	0
   222  020C  3466               	retlw	102
   223  020D  3400               	retlw	0
   224  020E  346D               	retlw	109
   225  020F  3400               	retlw	0
   226  0210  347D               	retlw	125
   227  0211  3400               	retlw	0
   228  0212  3407               	retlw	7
   229  0213  3400               	retlw	0
   230  0214  347F               	retlw	127
   231  0215  3400               	retlw	0
   232  0216  346F               	retlw	111
   233  0217  3400               	retlw	0
   234  0218  3477               	retlw	119
   235  0219  3400               	retlw	0
   236  021A  347C               	retlw	124
   237  021B  3400               	retlw	0
   238  021C  3439               	retlw	57
   239  021D  3400               	retlw	0
   240  021E  345E               	retlw	94
   241  021F  3400               	retlw	0
   242  0220  3479               	retlw	121
   243  0221  3400               	retlw	0
   244  0222  3471               	retlw	113
   245  0223  3400               	retlw	0
   246  0008                     _PORTDbits	set	8
   247  000B                     _INTCON	set	11
   248  001F                     _ADCON0bits	set	31
   249  0008                     _PORTD	set	8
   250  0007                     _PORTC	set	7
   251  0005                     _PORTA	set	5
   252  0006                     _PORTB	set	6
   253  0001                     _TMR0	set	1
   254  001E                     _ADRESH	set	30
   255  000C                     _PIR1bits	set	12
   256  0006                     _PORTBbits	set	6
   257  000B                     _INTCONbits	set	11
   258  0096                     _IOCBbits	set	150
   259  0081                     _OPTION_REGbits	set	129
   260  0081                     _OPTION_REG	set	129
   261  009F                     _ADCON1bits	set	159
   262  008C                     _PIE1bits	set	140
   263  0087                     _TRISC	set	135
   264  0088                     _TRISD	set	136
   265  0086                     _TRISBbits	set	134
   266  0085                     _TRISA	set	133
   267  0189                     _ANSELHbits	set	393
   268  0189                     _ANSELH	set	393
   269  0188                     _ANSEL	set	392
   270                           
   271                           ; #config settings
   272  0000                     
   273                           	psect	cinit
   274  0013                     start_initialization:	
   275  0013                     __initialization:	
   276                           
   277                           ; Initialize objects allocated to BANK0
   278  0013  1383               	bcf	3,7	;select IRP bank0
   279  0014  3040               	movlw	low (__pdataBANK0+32)
   280  0015  00FD               	movwf	btemp+-1
   281  0016  3002               	movlw	high __pidataBANK0
   282  0017  00FE               	movwf	btemp
   283  0018  3004               	movlw	low __pidataBANK0
   284  0019  00FF               	movwf	btemp+1
   285  001A  3020               	movlw	low __pdataBANK0
   286  001B  0084               	movwf	4
   287  001C  120A  118A  2228  120A  118A  	fcall	init_ram0
   288                           
   289                           ; Clear objects allocated to BANK0
   290  0021  01D2               	clrf	__pbssBANK0& (0+127)
   291  0022  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   292  0023  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   293  0024  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   294  0025  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   295  0026  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   296  0027  01D8               	clrf	(__pbssBANK0+6)& (0+127)
   297  0028  01D9               	clrf	(__pbssBANK0+7)& (0+127)
   298  0029  01DA               	clrf	(__pbssBANK0+8)& (0+127)
   299  002A  01DB               	clrf	(__pbssBANK0+9)& (0+127)
   300  002B  01DC               	clrf	(__pbssBANK0+10)& (0+127)
   301                           
   302                           ; Clear objects allocated to COMMON
   303  002C  01F9               	clrf	__pbssCOMMON& (0+127)
   304  002D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   305  002E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   306  002F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   307  0030                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  0030                     __end_of__initialization:	
   311  0030  0183               	clrf	3
   312  0031  120A  118A  2834   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMMON
   315  0079                     __pbssCOMMON:	
   316  0079                     _valorold:	
   317  0079                     	ds	2
   318  007B                     _contador:	
   319  007B                     	ds	2
   320                           
   321                           	psect	bssBANK0
   322  0052                     __pbssBANK0:	
   323  0052                     _d2:	
   324  0052                     	ds	2
   325  0054                     _d1:	
   326  0054                     	ds	2
   327  0056                     _var:	
   328  0056                     	ds	2
   329  0058                     _valorold2:	
   330  0058                     	ds	2
   331  005A                     _change:	
   332  005A                     	ds	1
   333  005B                     _alarma:	
   334  005B                     	ds	1
   335  005C                     _i:	
   336  005C                     	ds	1
   337                           
   338                           	psect	dataBANK0
   339  0020                     __pdataBANK0:	
   340  0020                     _display2:	
   341  0020                     	ds	32
   342                           
   343                           	psect	inittext
   344  0224                     init_fetch0:	
   345                           ;	Called with low address in FSR and high address in W
   346                           
   347  0224  087E               	movf	btemp,w
   348  0225  008A               	movwf	10
   349  0226  087F               	movf	btemp+1,w
   350  0227  0082               	movwf	2
   351  0228                     init_ram0:	
   352                           ;Called with:
   353                           ;	high address of idata address in btemp 
   354                           ;	low address of idata address in btemp+1 
   355                           ;	low address of data in FSR
   356                           ;	high address + 1 of data in btemp-1
   357                           
   358  0228  120A  118A  2224  120A  118A  	fcall	init_fetch0
   359  022D  0080               	movwf	0
   360  022E  0A84               	incf	4,f
   361  022F  0804               	movf	4,w
   362  0230  067D               	xorwf	btemp+-1,w
   363  0231  1903               	btfsc	3,2
   364  0232  3400               	retlw	0
   365  0233  0AFF               	incf	btemp+1,f
   366  0234  1903               	btfsc	3,2
   367  0235  0AFE               	incf	btemp,f
   368  0236  2A28               	goto	init_ram0
   369                           
   370                           	psect	cstackCOMMON
   371  0070                     __pcstackCOMMON:	
   372  0070                     ?_ISR:	
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?i1___awdiv:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     i1___awdiv@divisor:	
   380                           ; 2 bytes @ 0x0
   381                           
   382                           
   383                           ; 2 bytes @ 0x0
   384  0070                     	ds	2
   385  0072                     i1___awdiv@dividend:	
   386                           
   387                           ; 2 bytes @ 0x2
   388  0072                     	ds	2
   389  0074                     ??i1___awdiv:	
   390                           
   391                           ; 1 bytes @ 0x4
   392  0074                     	ds	1
   393  0075                     i1___awdiv@counter:	
   394                           
   395                           ; 1 bytes @ 0x5
   396  0075                     	ds	1
   397  0076                     i1___awdiv@sign:	
   398                           
   399                           ; 1 bytes @ 0x6
   400  0076                     	ds	1
   401  0077                     i1___awdiv@quotient:	
   402                           
   403                           ; 2 bytes @ 0x7
   404  0077                     	ds	2
   405                           
   406                           	psect	cstackBANK0
   407  0040                     __pcstackBANK0:	
   408  0040                     ??_ISR:	
   409                           
   410                           ; 1 bytes @ 0x0
   411  0040                     	ds	6
   412  0046                     ?___awdiv:	
   413  0046                     ___awdiv@divisor:	
   414                           ; 2 bytes @ 0x6
   415                           
   416                           
   417                           ; 2 bytes @ 0x6
   418  0046                     	ds	2
   419  0048                     ___awdiv@dividend:	
   420                           
   421                           ; 2 bytes @ 0x8
   422  0048                     	ds	2
   423  004A                     ??___awdiv:	
   424                           
   425                           ; 1 bytes @ 0xA
   426  004A                     	ds	1
   427  004B                     ___awdiv@counter:	
   428                           
   429                           ; 1 bytes @ 0xB
   430  004B                     	ds	1
   431  004C                     ___awdiv@sign:	
   432                           
   433                           ; 1 bytes @ 0xC
   434  004C                     	ds	1
   435  004D                     ___awdiv@quotient:	
   436                           
   437                           ; 2 bytes @ 0xD
   438  004D                     	ds	2
   439  004F                     ??_main:	
   440                           
   441                           ; 1 bytes @ 0xF
   442  004F                     	ds	3
   443                           
   444                           	psect	maintext
   445  0034                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 78 in file "Lab2.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       3       0       0       0
   468 ;;      Totals:         0       3       0       0       0
   469 ;;Total ram usage:        3 bytes
   470 ;; Hardware stack levels required when called:    3
   471 ;; This function calls:
   472 ;;		___awdiv
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _main
   480  0034                     _main:	
   481  0034                     l1048:	
   482                           ;incstack = 0
   483                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   484                           
   485                           
   486                           ;Lab2.c: 79: ANSEL=0;
   487  0034  1683               	bsf	3,5	;RP0=1, select bank3
   488  0035  1703               	bsf	3,6	;RP1=1, select bank3
   489  0036  0188               	clrf	8	;volatile
   490                           
   491                           ;Lab2.c: 80: ANSELH=0;
   492  0037  0189               	clrf	9	;volatile
   493  0038                     l1050:	
   494                           
   495                           ;Lab2.c: 81: ANSELHbits.ANS8 =1;
   496  0038  1409               	bsf	9,0	;volatile
   497                           
   498                           ;Lab2.c: 83: TRISA=0;
   499  0039  1683               	bsf	3,5	;RP0=1, select bank1
   500  003A  1303               	bcf	3,6	;RP1=0, select bank1
   501  003B  0185               	clrf	5	;volatile
   502  003C                     l1052:	
   503                           
   504                           ;Lab2.c: 84: TRISBbits.TRISB2=1;
   505  003C  1506               	bsf	6,2	;volatile
   506  003D                     l1054:	
   507                           
   508                           ;Lab2.c: 85: TRISBbits.TRISB7=1;
   509  003D  1786               	bsf	6,7	;volatile
   510  003E                     l1056:	
   511                           
   512                           ;Lab2.c: 86: TRISBbits.TRISB6=1;
   513  003E  1706               	bsf	6,6	;volatile
   514                           
   515                           ;Lab2.c: 87: TRISD=0;
   516  003F  0188               	clrf	8	;volatile
   517                           
   518                           ;Lab2.c: 88: TRISC=0;
   519  0040  0187               	clrf	7	;volatile
   520                           
   521                           ;Lab2.c: 90: PORTB=0;
   522  0041  1283               	bcf	3,5	;RP0=0, select bank0
   523  0042  1303               	bcf	3,6	;RP1=0, select bank0
   524  0043  0186               	clrf	6	;volatile
   525                           
   526                           ;Lab2.c: 91: PORTA=0;
   527  0044  0185               	clrf	5	;volatile
   528                           
   529                           ;Lab2.c: 92: PORTC=0;
   530  0045  0187               	clrf	7	;volatile
   531                           
   532                           ;Lab2.c: 93: PORTD=0;
   533  0046  0188               	clrf	8	;volatile
   534  0047                     l1058:	
   535                           
   536                           ;Lab2.c: 96: PIE1bits.ADIE=1;
   537  0047  1683               	bsf	3,5	;RP0=1, select bank1
   538  0048  1303               	bcf	3,6	;RP1=0, select bank1
   539  0049  170C               	bsf	12,6	;volatile
   540  004A                     l1060:	
   541                           
   542                           ;Lab2.c: 97: PIR1bits.ADIF=1;
   543  004A  1283               	bcf	3,5	;RP0=0, select bank0
   544  004B  1303               	bcf	3,6	;RP1=0, select bank0
   545  004C  170C               	bsf	12,6	;volatile
   546  004D                     l1062:	
   547                           
   548                           ;Lab2.c: 99: ADCON0bits.ADCS=01;
   549  004D  081F               	movf	31,w	;volatile
   550  004E  393F               	andlw	-193
   551  004F  3840               	iorlw	64
   552  0050  009F               	movwf	31	;volatile
   553  0051                     l1064:	
   554                           
   555                           ;Lab2.c: 101: ADCON0bits.CHS0=0;
   556  0051  111F               	bcf	31,2	;volatile
   557  0052                     l1066:	
   558                           
   559                           ;Lab2.c: 102: ADCON0bits.CHS1=0;
   560  0052  119F               	bcf	31,3	;volatile
   561  0053                     l1068:	
   562                           
   563                           ;Lab2.c: 103: ADCON0bits.CHS2=0;
   564  0053  121F               	bcf	31,4	;volatile
   565  0054                     l1070:	
   566                           
   567                           ;Lab2.c: 104: ADCON0bits.CHS3=1;
   568  0054  169F               	bsf	31,5	;volatile
   569  0055                     l1072:	
   570                           
   571                           ;Lab2.c: 105: ADCON0bits.GO_nDONE=0;
   572  0055  109F               	bcf	31,1	;volatile
   573  0056                     l1074:	
   574                           
   575                           ;Lab2.c: 107: ADCON0bits.ADON=1;
   576  0056  141F               	bsf	31,0	;volatile
   577  0057                     l1076:	
   578                           
   579                           ;Lab2.c: 109: ADCON1bits.ADFM=0;
   580  0057  1683               	bsf	3,5	;RP0=1, select bank1
   581  0058  1303               	bcf	3,6	;RP1=0, select bank1
   582  0059  139F               	bcf	31,7	;volatile
   583  005A                     l1078:	
   584                           
   585                           ;Lab2.c: 111: ADCON1bits.VCFG0=0;
   586  005A  121F               	bcf	31,4	;volatile
   587  005B                     l1080:	
   588                           
   589                           ;Lab2.c: 112: ADCON1bits.VCFG1=0;
   590  005B  129F               	bcf	31,5	;volatile
   591  005C                     l1082:	
   592                           
   593                           ;Lab2.c: 115: INTCON=0;
   594  005C  018B               	clrf	11	;volatile
   595  005D                     l1084:	
   596                           
   597                           ;Lab2.c: 116: INTCONbits.GIE=1;
   598  005D  178B               	bsf	11,7	;volatile
   599  005E                     l1086:	
   600                           
   601                           ;Lab2.c: 117: INTCONbits.RBIE=1;
   602  005E  158B               	bsf	11,3	;volatile
   603  005F                     l1088:	
   604                           
   605                           ;Lab2.c: 118: INTCONbits.RBIF=0;
   606  005F  100B               	bcf	11,0	;volatile
   607  0060                     l1090:	
   608                           
   609                           ;Lab2.c: 120: INTCONbits.T0IE=1;
   610  0060  168B               	bsf	11,5	;volatile
   611  0061                     l1092:	
   612                           
   613                           ;Lab2.c: 121: INTCONbits.T0IF=0;
   614  0061  110B               	bcf	11,2	;volatile
   615  0062                     l1094:	
   616                           
   617                           ;Lab2.c: 123: OPTION_REG=0;
   618  0062  0181               	clrf	1	;volatile
   619  0063                     l1096:	
   620                           
   621                           ;Lab2.c: 124: OPTION_REGbits.PS0=0;
   622  0063  1001               	bcf	1,0	;volatile
   623  0064                     l1098:	
   624                           
   625                           ;Lab2.c: 125: OPTION_REGbits.PS1=0;
   626  0064  1081               	bcf	1,1	;volatile
   627  0065                     l1100:	
   628                           
   629                           ;Lab2.c: 126: OPTION_REGbits.PS2=1;
   630  0065  1501               	bsf	1,2	;volatile
   631  0066                     l1102:	
   632                           
   633                           ;Lab2.c: 128: TMR0=200;
   634  0066  30C8               	movlw	200
   635  0067  1283               	bcf	3,5	;RP0=0, select bank0
   636  0068  1303               	bcf	3,6	;RP1=0, select bank0
   637  0069  0081               	movwf	1	;volatile
   638  006A                     l1104:	
   639                           
   640                           ;Lab2.c: 130: IOCBbits.IOCB7=1;
   641  006A  1683               	bsf	3,5	;RP0=1, select bank1
   642  006B  1303               	bcf	3,6	;RP1=0, select bank1
   643  006C  1796               	bsf	22,7	;volatile
   644  006D                     l1106:	
   645                           
   646                           ;Lab2.c: 131: IOCBbits.IOCB6=1;
   647  006D  1716               	bsf	22,6	;volatile
   648  006E                     l1108:	
   649                           
   650                           ;Lab2.c: 132: i=0;
   651  006E  1283               	bcf	3,5	;RP0=0, select bank0
   652  006F  1303               	bcf	3,6	;RP1=0, select bank0
   653  0070  01DC               	clrf	_i
   654  0071                     l1110:	
   655                           
   656                           ;Lab2.c: 135:     if (alarma > i){
   657  0071  085B               	movf	_alarma,w
   658  0072  025C               	subwf	_i,w
   659  0073  1803               	skipnc
   660  0074  2876               	goto	u561
   661  0075  2877               	goto	u560
   662  0076                     u561:	
   663  0076  2879               	goto	l85
   664  0077                     u560:	
   665  0077                     l1112:	
   666                           
   667                           ;Lab2.c: 136:         PORTDbits.RD2=1;
   668  0077  1508               	bsf	8,2	;volatile
   669                           
   670                           ;Lab2.c: 137:     }
   671  0078  287A               	goto	l1114
   672  0079                     l85:	
   673                           ;Lab2.c: 138:     else{
   674                           
   675                           
   676                           ;Lab2.c: 139:         PORTDbits.RD2=0;
   677  0079  1108               	bcf	8,2	;volatile
   678  007A                     l1114:	
   679                           
   680                           ;Lab2.c: 141:     _delay((unsigned long)((10)*(4000000/4000.0)));
   681  007A  300D               	movlw	13
   682  007B  1283               	bcf	3,5	;RP0=0, select bank0
   683  007C  1303               	bcf	3,6	;RP1=0, select bank0
   684  007D  00D0               	movwf	??_main+1
   685  007E  30FB               	movlw	251
   686  007F  00CF               	movwf	??_main
   687  0080                     u597:	
   688  0080  0BCF               	decfsz	??_main,f
   689  0081  2880               	goto	u597
   690  0082  0BD0               	decfsz	??_main+1,f
   691  0083  2880               	goto	u597
   692  0084                     l1116:	
   693                           
   694                           ;Lab2.c: 142:     ADCON0bits.GO_DONE=1;
   695  0084  1283               	bcf	3,5	;RP0=0, select bank0
   696  0085  1303               	bcf	3,6	;RP1=0, select bank0
   697  0086  149F               	bsf	31,1	;volatile
   698                           
   699                           ;Lab2.c: 143:     _delay((unsigned long)((10)*(4000000/4000.0)));
   700  0087  300D               	movlw	13
   701  0088  1283               	bcf	3,5	;RP0=0, select bank0
   702  0089  1303               	bcf	3,6	;RP1=0, select bank0
   703  008A  00D0               	movwf	??_main+1
   704  008B  30FB               	movlw	251
   705  008C  00CF               	movwf	??_main
   706  008D                     u607:	
   707  008D  0BCF               	decfsz	??_main,f
   708  008E  288D               	goto	u607
   709  008F  0BD0               	decfsz	??_main+1,f
   710  0090  288D               	goto	u607
   711  0091                     l1118:	
   712                           
   713                           ;Lab2.c: 144:     if (change == 1){
   714  0091  1283               	bcf	3,5	;RP0=0, select bank0
   715  0092  1303               	bcf	3,6	;RP1=0, select bank0
   716  0093  035A               	decf	_change,w
   717  0094  1D03               	btfss	3,2
   718  0095  2897               	goto	u571
   719  0096  2898               	goto	u570
   720  0097                     u571:	
   721  0097  28C7               	goto	l1134
   722  0098                     u570:	
   723  0098                     l1120:	
   724                           
   725                           ;Lab2.c: 145:         if(PORTDbits.RD1==1){
   726  0098  1C88               	btfss	8,1	;volatile
   727  0099  289B               	goto	u581
   728  009A  289C               	goto	u580
   729  009B                     u581:	
   730  009B  28BA               	goto	l88
   731  009C                     u580:	
   732  009C                     l1122:	
   733                           
   734                           ;Lab2.c: 146:             PORTDbits.RD0=0;
   735  009C  1008               	bcf	8,0	;volatile
   736                           
   737                           ;Lab2.c: 147:             PORTDbits.RD1=0;
   738  009D  1088               	bcf	8,1	;volatile
   739  009E                     l1124:	
   740                           
   741                           ;Lab2.c: 148:             PORTC=display2[ADRESH/16];
   742  009E  3010               	movlw	16
   743  009F  00C6               	movwf	___awdiv@divisor
   744  00A0  3000               	movlw	0
   745  00A1  00C7               	movwf	___awdiv@divisor+1
   746  00A2  081E               	movf	30,w	;volatile
   747  00A3  00CF               	movwf	??_main
   748  00A4  01D0               	clrf	??_main+1
   749  00A5  084F               	movf	??_main,w
   750  00A6  00C8               	movwf	___awdiv@dividend
   751  00A7  0850               	movf	??_main+1,w
   752  00A8  00C9               	movwf	___awdiv@dividend+1
   753  00A9  120A  118A  20CD  120A  118A  	fcall	___awdiv
   754  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   755  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   756  00B0  0846               	movf	?___awdiv,w
   757  00B1  00D1               	movwf	??_main+2
   758  00B2  0751               	addwf	??_main+2,w
   759  00B3  3E20               	addlw	(low (_display2| 0))& (0+255)
   760  00B4  0084               	movwf	4
   761  00B5  1383               	bcf	3,7	;select IRP bank0
   762  00B6  0800               	movf	0,w
   763  00B7  0087               	movwf	7	;volatile
   764  00B8                     l1126:	
   765                           
   766                           ;Lab2.c: 149:             PORTDbits.RD0=1;
   767  00B8  1408               	bsf	8,0	;volatile
   768                           
   769                           ;Lab2.c: 150:             }
   770  00B9  28C6               	goto	l1132
   771  00BA                     l88:	
   772                           ;Lab2.c: 151:         else{
   773                           
   774                           
   775                           ;Lab2.c: 152:             PORTDbits.RD0=0;
   776  00BA  1008               	bcf	8,0	;volatile
   777                           
   778                           ;Lab2.c: 153:             PORTDbits.RD1=0;
   779  00BB  1088               	bcf	8,1	;volatile
   780  00BC                     l1128:	
   781                           
   782                           ;Lab2.c: 154:             PORTC=display2[ADRESH%16];
   783  00BC  081E               	movf	30,w	;volatile
   784  00BD  390F               	andlw	15
   785  00BE  00CF               	movwf	??_main
   786  00BF  074F               	addwf	??_main,w
   787  00C0  3E20               	addlw	(low (_display2| 0))& (0+255)
   788  00C1  0084               	movwf	4
   789  00C2  1383               	bcf	3,7	;select IRP bank0
   790  00C3  0800               	movf	0,w
   791  00C4  0087               	movwf	7	;volatile
   792  00C5                     l1130:	
   793                           
   794                           ;Lab2.c: 155:             PORTDbits.RD1=1;
   795  00C5  1488               	bsf	8,1	;volatile
   796  00C6                     l1132:	
   797                           
   798                           ;Lab2.c: 157:         change=0;
   799  00C6  01DA               	clrf	_change
   800  00C7                     l1134:	
   801                           
   802                           ;Lab2.c: 159:     PORTA=i;
   803  00C7  085C               	movf	_i,w
   804  00C8  0085               	movwf	5	;volatile
   805  00C9  2871               	goto	l1110
   806  00CA  120A  118A  2810   	ljmp	start
   807  00CD                     __end_of_main:	
   808                           
   809                           	psect	text1
   810  00CD                     __ptext1:	
   811 ;; *************** function ___awdiv *****************
   812 ;; Defined at:
   813 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  divisor         2    6[BANK0 ] int 
   816 ;;  dividend        2    8[BANK0 ] int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  quotient        2   13[BANK0 ] int 
   819 ;;  sign            1   12[BANK0 ] unsigned char 
   820 ;;  counter         1   11[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  2    6[BANK0 ] int 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       4       0       0       0
   831 ;;      Locals:         0       4       0       0       0
   832 ;;      Temps:          0       1       0       0       0
   833 ;;      Totals:         0       9       0       0       0
   834 ;;Total ram usage:        9 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    2
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function ___awdiv
   846  00CD                     ___awdiv:	
   847  00CD                     l910:	
   848                           ;incstack = 0
   849                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   850                           
   851  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   852  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   853  00CF  01CC               	clrf	___awdiv@sign
   854  00D0                     l912:	
   855  00D0  1FC7               	btfss	___awdiv@divisor+1,7
   856  00D1  28D3               	goto	u301
   857  00D2  28D4               	goto	u300
   858  00D3                     u301:	
   859  00D3  28DB               	goto	l918
   860  00D4                     u300:	
   861  00D4                     l914:	
   862  00D4  09C6               	comf	___awdiv@divisor,f
   863  00D5  09C7               	comf	___awdiv@divisor+1,f
   864  00D6  0AC6               	incf	___awdiv@divisor,f
   865  00D7  1903               	skipnz
   866  00D8  0AC7               	incf	___awdiv@divisor+1,f
   867  00D9                     l916:	
   868  00D9  01CC               	clrf	___awdiv@sign
   869  00DA  0ACC               	incf	___awdiv@sign,f
   870  00DB                     l918:	
   871  00DB  1FC9               	btfss	___awdiv@dividend+1,7
   872  00DC  28DE               	goto	u311
   873  00DD  28DF               	goto	u310
   874  00DE                     u311:	
   875  00DE  28E8               	goto	l924
   876  00DF                     u310:	
   877  00DF                     l920:	
   878  00DF  09C8               	comf	___awdiv@dividend,f
   879  00E0  09C9               	comf	___awdiv@dividend+1,f
   880  00E1  0AC8               	incf	___awdiv@dividend,f
   881  00E2  1903               	skipnz
   882  00E3  0AC9               	incf	___awdiv@dividend+1,f
   883  00E4                     l922:	
   884  00E4  3001               	movlw	1
   885  00E5  00CA               	movwf	??___awdiv
   886  00E6  084A               	movf	??___awdiv,w
   887  00E7  06CC               	xorwf	___awdiv@sign,f
   888  00E8                     l924:	
   889  00E8  01CD               	clrf	___awdiv@quotient
   890  00E9  01CE               	clrf	___awdiv@quotient+1
   891  00EA                     l926:	
   892  00EA  0846               	movf	___awdiv@divisor,w
   893  00EB  0447               	iorwf	___awdiv@divisor+1,w
   894  00EC  1903               	btfsc	3,2
   895  00ED  28EF               	goto	u321
   896  00EE  28F0               	goto	u320
   897  00EF                     u321:	
   898  00EF  2927               	goto	l946
   899  00F0                     u320:	
   900  00F0                     l928:	
   901  00F0  01CB               	clrf	___awdiv@counter
   902  00F1  0ACB               	incf	___awdiv@counter,f
   903  00F2  28FE               	goto	l934
   904  00F3                     l930:	
   905  00F3  3001               	movlw	1
   906  00F4                     u335:	
   907  00F4  1003               	clrc
   908  00F5  0DC6               	rlf	___awdiv@divisor,f
   909  00F6  0DC7               	rlf	___awdiv@divisor+1,f
   910  00F7  3EFF               	addlw	-1
   911  00F8  1D03               	skipz
   912  00F9  28F4               	goto	u335
   913  00FA                     l932:	
   914  00FA  3001               	movlw	1
   915  00FB  00CA               	movwf	??___awdiv
   916  00FC  084A               	movf	??___awdiv,w
   917  00FD  07CB               	addwf	___awdiv@counter,f
   918  00FE                     l934:	
   919  00FE  1FC7               	btfss	___awdiv@divisor+1,7
   920  00FF  2901               	goto	u341
   921  0100  2902               	goto	u340
   922  0101                     u341:	
   923  0101  28F3               	goto	l930
   924  0102                     u340:	
   925  0102                     l936:	
   926  0102  3001               	movlw	1
   927  0103                     u355:	
   928  0103  1003               	clrc
   929  0104  0DCD               	rlf	___awdiv@quotient,f
   930  0105  0DCE               	rlf	___awdiv@quotient+1,f
   931  0106  3EFF               	addlw	-1
   932  0107  1D03               	skipz
   933  0108  2903               	goto	u355
   934  0109  0847               	movf	___awdiv@divisor+1,w
   935  010A  0249               	subwf	___awdiv@dividend+1,w
   936  010B  1D03               	skipz
   937  010C  290F               	goto	u365
   938  010D  0846               	movf	___awdiv@divisor,w
   939  010E  0248               	subwf	___awdiv@dividend,w
   940  010F                     u365:	
   941  010F  1C03               	skipc
   942  0110  2912               	goto	u361
   943  0111  2913               	goto	u360
   944  0112                     u361:	
   945  0112  291A               	goto	l942
   946  0113                     u360:	
   947  0113                     l938:	
   948  0113  0846               	movf	___awdiv@divisor,w
   949  0114  02C8               	subwf	___awdiv@dividend,f
   950  0115  0847               	movf	___awdiv@divisor+1,w
   951  0116  1C03               	skipc
   952  0117  03C9               	decf	___awdiv@dividend+1,f
   953  0118  02C9               	subwf	___awdiv@dividend+1,f
   954  0119                     l940:	
   955  0119  144D               	bsf	___awdiv@quotient,0
   956  011A                     l942:	
   957  011A  3001               	movlw	1
   958  011B                     u375:	
   959  011B  1003               	clrc
   960  011C  0CC7               	rrf	___awdiv@divisor+1,f
   961  011D  0CC6               	rrf	___awdiv@divisor,f
   962  011E  3EFF               	addlw	-1
   963  011F  1D03               	skipz
   964  0120  291B               	goto	u375
   965  0121                     l944:	
   966  0121  3001               	movlw	1
   967  0122  02CB               	subwf	___awdiv@counter,f
   968  0123  1D03               	btfss	3,2
   969  0124  2926               	goto	u381
   970  0125  2927               	goto	u380
   971  0126                     u381:	
   972  0126  2902               	goto	l936
   973  0127                     u380:	
   974  0127                     l946:	
   975  0127  084C               	movf	___awdiv@sign,w
   976  0128  1903               	btfsc	3,2
   977  0129  292B               	goto	u391
   978  012A  292C               	goto	u390
   979  012B                     u391:	
   980  012B  2931               	goto	l950
   981  012C                     u390:	
   982  012C                     l948:	
   983  012C  09CD               	comf	___awdiv@quotient,f
   984  012D  09CE               	comf	___awdiv@quotient+1,f
   985  012E  0ACD               	incf	___awdiv@quotient,f
   986  012F  1903               	skipnz
   987  0130  0ACE               	incf	___awdiv@quotient+1,f
   988  0131                     l950:	
   989  0131  084E               	movf	___awdiv@quotient+1,w
   990  0132  00C7               	movwf	?___awdiv+1
   991  0133  084D               	movf	___awdiv@quotient,w
   992  0134  00C6               	movwf	?___awdiv
   993  0135                     l331:	
   994  0135  0008               	return
   995  0136                     __end_of___awdiv:	
   996                           
   997                           	psect	text2
   998  0136                     __ptext2:	
   999 ;; *************** function _ISR *****************
  1000 ;; Defined at:
  1001 ;;		line 34 in file "Lab2.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          0       6       0       0       0
  1018 ;;      Totals:         0       6       0       0       0
  1019 ;;Total ram usage:        6 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    1
  1022 ;; This function calls:
  1023 ;;		i1___awdiv
  1024 ;; This function is called by:
  1025 ;;		Interrupt level 1
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _ISR
  1031  0136                     _ISR:	
  1032  0136                     i1l998:	
  1033                           
  1034                           ;Lab2.c: 37:     INTCONbits.T0IE=0;
  1035  0136  128B               	bcf	11,5	;volatile
  1036                           
  1037                           ;Lab2.c: 39:     if(PORTBbits.RB7==1 && INTCONbits.RBIF==1){
  1038  0137  1F86               	btfss	6,7	;volatile
  1039  0138  293A               	goto	u50_21
  1040  0139  293B               	goto	u50_20
  1041  013A                     u50_21:	
  1042  013A  2948               	goto	i1l1012
  1043  013B                     u50_20:	
  1044  013B                     i1l1000:	
  1045  013B  1C0B               	btfss	11,0	;volatile
  1046  013C  293E               	goto	u51_21
  1047  013D  293F               	goto	u51_20
  1048  013E                     u51_21:	
  1049  013E  2948               	goto	i1l1012
  1050  013F                     u51_20:	
  1051  013F                     i1l1002:	
  1052                           
  1053                           ;Lab2.c: 40:         INTCONbits.GIE=0;
  1054  013F  138B               	bcf	11,7	;volatile
  1055                           
  1056                           ;Lab2.c: 41:         INTCONbits.RBIE=0;
  1057  0140  118B               	bcf	11,3	;volatile
  1058  0141                     i1l1004:	
  1059                           
  1060                           ;Lab2.c: 42:         i++;
  1061  0141  3001               	movlw	1
  1062  0142  00C0               	movwf	??_ISR
  1063  0143  0840               	movf	??_ISR,w
  1064  0144  07DC               	addwf	_i,f
  1065  0145                     i1l1006:	
  1066                           
  1067                           ;Lab2.c: 43:         INTCONbits.GIE=1;
  1068  0145  178B               	bsf	11,7	;volatile
  1069  0146                     i1l1008:	
  1070                           
  1071                           ;Lab2.c: 44:         INTCONbits.RBIE=1;
  1072  0146  158B               	bsf	11,3	;volatile
  1073  0147                     i1l1010:	
  1074                           
  1075                           ;Lab2.c: 45:         INTCONbits.RBIF=0;
  1076  0147  100B               	bcf	11,0	;volatile
  1077  0148                     i1l1012:	
  1078                           
  1079                           ;Lab2.c: 47:     if(PORTBbits.RB6==1 && INTCONbits.RBIF==1){
  1080  0148  1F06               	btfss	6,6	;volatile
  1081  0149  294B               	goto	u52_21
  1082  014A  294C               	goto	u52_20
  1083  014B                     u52_21:	
  1084  014B  2957               	goto	i1l1026
  1085  014C                     u52_20:	
  1086  014C                     i1l1014:	
  1087  014C  1C0B               	btfss	11,0	;volatile
  1088  014D  294F               	goto	u53_21
  1089  014E  2950               	goto	u53_20
  1090  014F                     u53_21:	
  1091  014F  2957               	goto	i1l1026
  1092  0150                     u53_20:	
  1093  0150                     i1l1016:	
  1094                           
  1095                           ;Lab2.c: 48:         INTCONbits.GIE=0;
  1096  0150  138B               	bcf	11,7	;volatile
  1097                           
  1098                           ;Lab2.c: 49:         INTCONbits.RBIE=0;
  1099  0151  118B               	bcf	11,3	;volatile
  1100  0152                     i1l1018:	
  1101                           
  1102                           ;Lab2.c: 50:         i--;
  1103  0152  3001               	movlw	1
  1104  0153  02DC               	subwf	_i,f
  1105  0154                     i1l1020:	
  1106                           
  1107                           ;Lab2.c: 51:         INTCONbits.GIE=1;
  1108  0154  178B               	bsf	11,7	;volatile
  1109  0155                     i1l1022:	
  1110                           
  1111                           ;Lab2.c: 52:         INTCONbits.RBIE=1;
  1112  0155  158B               	bsf	11,3	;volatile
  1113  0156                     i1l1024:	
  1114                           
  1115                           ;Lab2.c: 53:         INTCONbits.RBIF=0;
  1116  0156  100B               	bcf	11,0	;volatile
  1117  0157                     i1l1026:	
  1118                           
  1119                           ;Lab2.c: 56:     if (PIR1bits.ADIF==1){
  1120  0157  1F0C               	btfss	12,6	;volatile
  1121  0158  295A               	goto	u54_21
  1122  0159  295B               	goto	u54_20
  1123  015A                     u54_21:	
  1124  015A  2989               	goto	i1l1036
  1125  015B                     u54_20:	
  1126  015B                     i1l1028:	
  1127                           
  1128                           ;Lab2.c: 57:         INTCONbits.GIE=0;
  1129  015B  138B               	bcf	11,7	;volatile
  1130                           
  1131                           ;Lab2.c: 58:         INTCONbits.RBIE=0;
  1132  015C  118B               	bcf	11,3	;volatile
  1133  015D                     i1l1030:	
  1134                           
  1135                           ;Lab2.c: 60:         d1 = display2[ADRESH/16];
  1136  015D  3010               	movlw	16
  1137  015E  00F0               	movwf	i1___awdiv@divisor
  1138  015F  3000               	movlw	0
  1139  0160  00F1               	movwf	i1___awdiv@divisor+1
  1140  0161  081E               	movf	30,w	;volatile
  1141  0162  00C0               	movwf	??_ISR
  1142  0163  01C1               	clrf	??_ISR+1
  1143  0164  0840               	movf	??_ISR,w
  1144  0165  00F2               	movwf	i1___awdiv@dividend
  1145  0166  0841               	movf	??_ISR+1,w
  1146  0167  00F3               	movwf	i1___awdiv@dividend+1
  1147  0168  120A  118A  219D  120A  118A  	fcall	i1___awdiv
  1148  016D  0870               	movf	?i1___awdiv,w
  1149  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1150  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0170  00C2               	movwf	??_ISR+2
  1152  0171  0742               	addwf	??_ISR+2,w
  1153  0172  3E20               	addlw	(low (_display2| 0))& (0+255)
  1154  0173  0084               	movwf	4
  1155  0174  1383               	bcf	3,7	;select IRP bank0
  1156  0175  0800               	movf	0,w
  1157  0176  00D4               	movwf	_d1
  1158  0177  0A84               	incf	4,f
  1159  0178  0800               	movf	0,w
  1160  0179  00D5               	movwf	_d1+1
  1161  017A                     i1l1032:	
  1162                           
  1163                           ;Lab2.c: 61:         d2 =display2[ADRESH%16];
  1164  017A  081E               	movf	30,w	;volatile
  1165  017B  390F               	andlw	15
  1166  017C  00C0               	movwf	??_ISR
  1167  017D  0740               	addwf	??_ISR,w
  1168  017E  3E20               	addlw	(low (_display2| 0))& (0+255)
  1169  017F  0084               	movwf	4
  1170  0180  0800               	movf	0,w
  1171  0181  00D2               	movwf	_d2
  1172  0182  0A84               	incf	4,f
  1173  0183  0800               	movf	0,w
  1174  0184  00D3               	movwf	_d2+1
  1175  0185                     i1l1034:	
  1176                           
  1177                           ;Lab2.c: 62:         alarma=ADRESH;
  1178  0185  081E               	movf	30,w	;volatile
  1179  0186  00C0               	movwf	??_ISR
  1180  0187  0840               	movf	??_ISR,w
  1181  0188  00DB               	movwf	_alarma
  1182  0189                     i1l1036:	
  1183                           
  1184                           ;Lab2.c: 66:     if(INTCONbits.T0IF == 1){
  1185  0189  1D0B               	btfss	11,2	;volatile
  1186  018A  298C               	goto	u55_21
  1187  018B  298D               	goto	u55_20
  1188  018C                     u55_21:	
  1189  018C  2991               	goto	i1l1042
  1190  018D                     u55_20:	
  1191  018D                     i1l1038:	
  1192                           
  1193                           ;Lab2.c: 67:         TMR0 = 200;
  1194  018D  30C8               	movlw	200
  1195  018E  0081               	movwf	1	;volatile
  1196  018F                     i1l1040:	
  1197                           
  1198                           ;Lab2.c: 68:         change = 1;
  1199  018F  01DA               	clrf	_change
  1200  0190  0ADA               	incf	_change,f
  1201  0191                     i1l1042:	
  1202                           
  1203                           ;Lab2.c: 72:     INTCONbits.T0IE=1;
  1204  0191  168B               	bsf	11,5	;volatile
  1205  0192                     i1l1044:	
  1206                           
  1207                           ;Lab2.c: 73:     INTCONbits.T0IF=0;
  1208  0192  110B               	bcf	11,2	;volatile
  1209  0193                     i1l1046:	
  1210                           
  1211                           ;Lab2.c: 74:     PIR1bits.ADIF=0;
  1212  0193  130C               	bcf	12,6	;volatile
  1213  0194                     i1l79:	
  1214  0194  0845               	movf	??_ISR+5,w
  1215  0195  008A               	movwf	10
  1216  0196  0844               	movf	??_ISR+4,w
  1217  0197  0084               	movwf	4
  1218  0198  0E43               	swapf	(??_ISR+3)^0,w
  1219  0199  0083               	movwf	3
  1220  019A  0EFE               	swapf	btemp,f
  1221  019B  0E7E               	swapf	btemp,w
  1222  019C  0009               	retfie
  1223  019D                     __end_of_ISR:	
  1224                           
  1225                           	psect	intentry
  1226  0004                     __pintentry:	
  1227                           ;incstack = 0
  1228                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1229                           
  1230  0004                     interrupt_function:	
  1231  007E                     saved_w	set	btemp
  1232  0004  00FE               	movwf	btemp
  1233  0005  0E03               	swapf	3,w
  1234  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0008  00C3               	movwf	??_ISR+3
  1237  0009  0804               	movf	4,w
  1238  000A  00C4               	movwf	??_ISR+4
  1239  000B  080A               	movf	10,w
  1240  000C  00C5               	movwf	??_ISR+5
  1241  000D  120A  118A  2936   	ljmp	_ISR
  1242                           
  1243                           	psect	text3
  1244  019D                     __ptext3:	
  1245 ;; *************** function i1___awdiv *****************
  1246 ;; Defined at:
  1247 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  divisor         2    0[COMMON] int 
  1250 ;;  dividend        2    2[COMMON] int 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  __awdiv         2    7[COMMON] int 
  1253 ;;  __awdiv         1    6[COMMON] unsigned char 
  1254 ;;  __awdiv         1    5[COMMON] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2    0[COMMON] int 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         4       0       0       0       0
  1265 ;;      Locals:         4       0       0       0       0
  1266 ;;      Temps:          1       0       0       0       0
  1267 ;;      Totals:         9       0       0       0       0
  1268 ;;Total ram usage:        9 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_ISR
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function i1___awdiv
  1279  019D                     i1___awdiv:	
  1280  019D                     i1l954:	
  1281                           ;incstack = 0
  1282                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  1283                           
  1284  019D  01F6               	clrf	i1___awdiv@sign
  1285  019E                     i1l956:	
  1286  019E  1FF1               	btfss	i1___awdiv@divisor+1,7
  1287  019F  29A1               	goto	u40_21
  1288  01A0  29A2               	goto	u40_20
  1289  01A1                     u40_21:	
  1290  01A1  29A9               	goto	i1l962
  1291  01A2                     u40_20:	
  1292  01A2                     i1l958:	
  1293  01A2  09F0               	comf	i1___awdiv@divisor,f
  1294  01A3  09F1               	comf	i1___awdiv@divisor+1,f
  1295  01A4  0AF0               	incf	i1___awdiv@divisor,f
  1296  01A5  1903               	skipnz
  1297  01A6  0AF1               	incf	i1___awdiv@divisor+1,f
  1298  01A7                     i1l960:	
  1299  01A7  01F6               	clrf	i1___awdiv@sign
  1300  01A8  0AF6               	incf	i1___awdiv@sign,f
  1301  01A9                     i1l962:	
  1302  01A9  1FF3               	btfss	i1___awdiv@dividend+1,7
  1303  01AA  29AC               	goto	u41_21
  1304  01AB  29AD               	goto	u41_20
  1305  01AC                     u41_21:	
  1306  01AC  29B6               	goto	i1l968
  1307  01AD                     u41_20:	
  1308  01AD                     i1l964:	
  1309  01AD  09F2               	comf	i1___awdiv@dividend,f
  1310  01AE  09F3               	comf	i1___awdiv@dividend+1,f
  1311  01AF  0AF2               	incf	i1___awdiv@dividend,f
  1312  01B0  1903               	skipnz
  1313  01B1  0AF3               	incf	i1___awdiv@dividend+1,f
  1314  01B2                     i1l966:	
  1315  01B2  3001               	movlw	1
  1316  01B3  00F4               	movwf	??i1___awdiv
  1317  01B4  0874               	movf	??i1___awdiv,w
  1318  01B5  06F6               	xorwf	i1___awdiv@sign,f
  1319  01B6                     i1l968:	
  1320  01B6  01F7               	clrf	i1___awdiv@quotient
  1321  01B7  01F8               	clrf	i1___awdiv@quotient+1
  1322  01B8                     i1l970:	
  1323  01B8  0870               	movf	i1___awdiv@divisor,w
  1324  01B9  0471               	iorwf	i1___awdiv@divisor+1,w
  1325  01BA  1903               	btfsc	3,2
  1326  01BB  29BD               	goto	u42_21
  1327  01BC  29BE               	goto	u42_20
  1328  01BD                     u42_21:	
  1329  01BD  29F5               	goto	i1l990
  1330  01BE                     u42_20:	
  1331  01BE                     i1l972:	
  1332  01BE  01F5               	clrf	i1___awdiv@counter
  1333  01BF  0AF5               	incf	i1___awdiv@counter,f
  1334  01C0  29CC               	goto	i1l978
  1335  01C1                     i1l974:	
  1336  01C1  3001               	movlw	1
  1337  01C2                     u43_25:	
  1338  01C2  1003               	clrc
  1339  01C3  0DF0               	rlf	i1___awdiv@divisor,f
  1340  01C4  0DF1               	rlf	i1___awdiv@divisor+1,f
  1341  01C5  3EFF               	addlw	-1
  1342  01C6  1D03               	skipz
  1343  01C7  29C2               	goto	u43_25
  1344  01C8                     i1l976:	
  1345  01C8  3001               	movlw	1
  1346  01C9  00F4               	movwf	??i1___awdiv
  1347  01CA  0874               	movf	??i1___awdiv,w
  1348  01CB  07F5               	addwf	i1___awdiv@counter,f
  1349  01CC                     i1l978:	
  1350  01CC  1FF1               	btfss	i1___awdiv@divisor+1,7
  1351  01CD  29CF               	goto	u44_21
  1352  01CE  29D0               	goto	u44_20
  1353  01CF                     u44_21:	
  1354  01CF  29C1               	goto	i1l974
  1355  01D0                     u44_20:	
  1356  01D0                     i1l980:	
  1357  01D0  3001               	movlw	1
  1358  01D1                     u45_25:	
  1359  01D1  1003               	clrc
  1360  01D2  0DF7               	rlf	i1___awdiv@quotient,f
  1361  01D3  0DF8               	rlf	i1___awdiv@quotient+1,f
  1362  01D4  3EFF               	addlw	-1
  1363  01D5  1D03               	skipz
  1364  01D6  29D1               	goto	u45_25
  1365  01D7  0871               	movf	i1___awdiv@divisor+1,w
  1366  01D8  0273               	subwf	i1___awdiv@dividend+1,w
  1367  01D9  1D03               	skipz
  1368  01DA  29DD               	goto	u46_25
  1369  01DB  0870               	movf	i1___awdiv@divisor,w
  1370  01DC  0272               	subwf	i1___awdiv@dividend,w
  1371  01DD                     u46_25:	
  1372  01DD  1C03               	skipc
  1373  01DE  29E0               	goto	u46_21
  1374  01DF  29E1               	goto	u46_20
  1375  01E0                     u46_21:	
  1376  01E0  29E8               	goto	i1l986
  1377  01E1                     u46_20:	
  1378  01E1                     i1l982:	
  1379  01E1  0870               	movf	i1___awdiv@divisor,w
  1380  01E2  02F2               	subwf	i1___awdiv@dividend,f
  1381  01E3  0871               	movf	i1___awdiv@divisor+1,w
  1382  01E4  1C03               	skipc
  1383  01E5  03F3               	decf	i1___awdiv@dividend+1,f
  1384  01E6  02F3               	subwf	i1___awdiv@dividend+1,f
  1385  01E7                     i1l984:	
  1386  01E7  1477               	bsf	i1___awdiv@quotient,0
  1387  01E8                     i1l986:	
  1388  01E8  3001               	movlw	1
  1389  01E9                     u47_25:	
  1390  01E9  1003               	clrc
  1391  01EA  0CF1               	rrf	i1___awdiv@divisor+1,f
  1392  01EB  0CF0               	rrf	i1___awdiv@divisor,f
  1393  01EC  3EFF               	addlw	-1
  1394  01ED  1D03               	skipz
  1395  01EE  29E9               	goto	u47_25
  1396  01EF                     i1l988:	
  1397  01EF  3001               	movlw	1
  1398  01F0  02F5               	subwf	i1___awdiv@counter,f
  1399  01F1  1D03               	btfss	3,2
  1400  01F2  29F4               	goto	u48_21
  1401  01F3  29F5               	goto	u48_20
  1402  01F4                     u48_21:	
  1403  01F4  29D0               	goto	i1l980
  1404  01F5                     u48_20:	
  1405  01F5                     i1l990:	
  1406  01F5  0876               	movf	i1___awdiv@sign,w
  1407  01F6  1903               	btfsc	3,2
  1408  01F7  29F9               	goto	u49_21
  1409  01F8  29FA               	goto	u49_20
  1410  01F9                     u49_21:	
  1411  01F9  29FF               	goto	i1l994
  1412  01FA                     u49_20:	
  1413  01FA                     i1l992:	
  1414  01FA  09F7               	comf	i1___awdiv@quotient,f
  1415  01FB  09F8               	comf	i1___awdiv@quotient+1,f
  1416  01FC  0AF7               	incf	i1___awdiv@quotient,f
  1417  01FD  1903               	skipnz
  1418  01FE  0AF8               	incf	i1___awdiv@quotient+1,f
  1419  01FF                     i1l994:	
  1420  01FF  0878               	movf	i1___awdiv@quotient+1,w
  1421  0200  00F1               	movwf	?i1___awdiv+1
  1422  0201  0877               	movf	i1___awdiv@quotient,w
  1423  0202  00F0               	movwf	?i1___awdiv
  1424  0203                     i1l331:	
  1425  0203  0008               	return
  1426  0204                     __end_ofi1___awdiv:	
  1427  007E                     btemp	set	126	;btemp
  1428  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     18      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awdiv

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     552
                                             15 BANK0      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     552
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  6     6      0     352
                                              0 BANK0      6     6      0
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (3) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 _ISR (ROOT)
   i1___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 06 18:00:58 2020

                       _i 005C                         pc 0002               __CFG_CP$OFF 0000  
                      l85 0079                        l88 00BA                        _d1 0054  
                      _d2 0052              ___awdiv@sign 004C                        fsr 0004  
                     l331 0135                       l910 00CD                       l920 00DF  
                     l912 00D0                       l930 00F3                       l922 00E4  
                     l914 00D4                       l940 0119                       l932 00FA  
                     l924 00E8                       l916 00D9                       l950 0131  
                     l942 011A                       l934 00FE                       l926 00EA  
                     l918 00DB                       l944 0121                       l936 0102  
                     l928 00F0                       l938 0113                       l946 0127  
                     l948 012C                       u300 00D4                       u301 00D3  
                     u310 00DF                       u311 00DE                       u320 00F0  
                     u321 00EF                       u340 0102                       u341 0101  
                     u335 00F4                       u360 0113                       u361 0112  
            __CFG_CPD$OFF 0000                       u355 0103                       u380 0127  
                     _ISR 0136                       u381 0126                       u365 010F  
                     u390 012C                       u391 012B                       u375 011B  
                     u607 008D                       u560 0077                       u561 0076  
                     u570 0098                       u571 0097                       u580 009C  
                     u581 009B                       u597 0080                       _var 0056  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1100 0065                      l1110 0071  
                    l1102 0066                      l1120 0098                      l1112 0077  
                    l1104 006A                      l1130 00C5                      l1122 009C  
                    l1114 007A                      l1106 006D                      l1050 0038  
                    l1132 00C6                      l1124 009E                      l1116 0084  
                    l1108 006E                      l1060 004A                      l1052 003C  
                    l1126 00B8                      l1134 00C7                      l1118 0091  
                    l1070 0054                      l1062 004D                      l1054 003D  
                    l1128 00BC                      l1080 005B                      l1072 0055  
                    l1064 0051                      l1056 003E                      l1048 0034  
                    l1090 0060                      l1082 005C                      l1074 0056  
                    l1066 0052                      l1058 0047                      l1092 0061  
                    l1084 005D                      l1076 0057                      l1068 0053  
                    l1094 0062                      l1086 005E                      l1078 005A  
                    l1096 0063                      l1088 005F                      l1098 0064  
                    i1l79 0194                      _TMR0 0001              __CFG_WRT$OFF 0000  
                    _main 0034                      btemp 007E                      start 0010  
           __CFG_IESO$OFF 0000                     ??_ISR 0040                     ?_main 0070  
          i1___awdiv@sign 0076           __end_of___awdiv 0136             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           ___awdiv@divisor 0046                     i1l331 0203  
                   i1l960 01A7                     i1l970 01B8                     i1l962 01A9  
                   i1l954 019D                     i1l980 01D0                     i1l972 01BE  
                   i1l964 01AD                     i1l956 019E                     i1l982 01E1  
                   i1l974 01C1                     i1l990 01F5                     i1l966 01B2  
                   i1l958 01A2                     i1l992 01FA                     i1l984 01E7  
                   i1l976 01C8                     i1l968 01B6                     i1l994 01FF  
                   i1l986 01E8                     i1l978 01CC                     i1l988 01EF  
                   i1l998 0136           ___awdiv@counter 004B                     u40_20 01A2  
                   u40_21 01A1                     u41_20 01AD                     u41_21 01AC  
                   u42_20 01BE                     u50_20 013B                     u42_21 01BD  
                   u50_21 013A                     u51_20 013F                     u51_21 013E  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     u43_25 01C2                     u44_20 01D0  
                   u52_20 014C                     u44_21 01CF                     u52_21 014B  
                   u53_20 0150                     u53_21 014F                     u45_25 01D1  
                   u46_20 01E1                     u54_20 015B                     u46_21 01E0  
                   u54_21 015A                     u46_25 01DD                     u55_20 018D  
                   u55_21 018C                     u47_25 01E9                     u48_20 01F5  
                   u48_21 01F4                     u49_20 01FA                     u49_21 01F9  
                   _TRISA 0085                     _TRISC 0087                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E        __size_ofi1___awdiv 0067  
          __CFG_MCLRE$OFF 0000           __initialization 0013              __end_of_main 00CD  
                  ??_main 004F                    _ADRESH 001E          ___awdiv@dividend 0048  
                  _ANSELH 0189                    i1l1000 013B                    i1l1010 0147  
                  i1l1002 013F                    i1l1020 0154                    i1l1004 0141  
                  i1l1012 0148                    i1l1030 015D                    i1l1022 0155  
                  i1l1014 014C                    i1l1006 0145                    i1l1040 018F  
                  i1l1032 017A                    i1l1024 0156                    i1l1016 0150  
                  i1l1008 0146                    i1l1042 0191                    i1l1034 0185  
                  i1l1018 0152                    i1l1026 0157                    i1l1044 0192  
                  i1l1028 015B                    i1l1036 0189                    i1l1046 0193  
                  i1l1038 018D                    _INTCON 000B            __CFG_PWRTE$OFF 0000  
               ??___awdiv 004A                    _change 005A                    _alarma 005B  
        ___awdiv@quotient 004D         __end_ofi1___awdiv 0204                    saved_w 007E  
 __end_of__initialization 0030            __pcstackCOMMON 0070              __pidataBANK0 0204  
          _OPTION_REGbits 0081                __pbssBANK0 0052                __pmaintext 0034  
              __pintentry 0004        i1___awdiv@dividend 0072        i1___awdiv@quotient 0077  
                 ___awdiv 00CD                   __ptext1 00CD                   __ptext2 0136  
                 __ptext3 019D              __size_of_ISR 0067      end_of_initialization 0030  
               _PORTBbits 0006                 _PORTDbits 0008                 _TRISBbits 0086  
               i1___awdiv 019D       start_initialization 0013               __end_of_ISR 019D  
              ?i1___awdiv 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 0224  
             __pdataBANK0 0020               __pbssCOMMON 0079                 ___latbits 0002  
           __pcstackBANK0 0040                  ?___awdiv 0046         i1___awdiv@divisor 0070  
       i1___awdiv@counter 0075               ??i1___awdiv 0074         interrupt_function 0004  
                _IOCBbits 0096                  _PIE1bits 008C                  _PIR1bits 000C  
               _valorold2 0058                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of___awdiv 0069                _ANSELHbits 0189         __CFG_BOR4V$BOR40V 0000  
                _display2 0020                  _contador 007B             __size_of_main 0099  
                _valorold 0079                _INTCONbits 000B                  init_ram0 0228  
                intlevel1 0000                _OPTION_REG 0081  
